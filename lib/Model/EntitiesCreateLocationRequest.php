<?php
/**
 * EntitiesCreateLocationRequest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * developer.yext.com
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.19-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * EntitiesCreateLocationRequest Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class EntitiesCreateLocationRequest implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'Entities:Create(Location)Request';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'meta' => '\Swagger\Client\Model\Meta',
        'additional_hours_text' => 'string',
        'address' => '\Swagger\Client\Model\Address',
        'address_hidden' => 'bool',
        'alternate_names' => 'string[]',
        'alternate_phone' => 'string',
        'alternate_websites' => 'string[]',
        'android_app_url' => 'string',
        'associations' => 'string[]',
        'bios' => '\Swagger\Client\Model\Bios',
        'brands' => 'string[]',
        'calendars' => '\Swagger\Client\Model\Calendars',
        'closed' => 'bool',
        'custom_keywords' => 'string[]',
        'description' => 'string',
        'display_coordinate' => '\Swagger\Client\Model\DisplayCoordinate',
        'dropoff_coordinate' => '\Swagger\Client\Model\DropoffCoordinate',
        'emails' => 'string[]',
        'facebook_call_to_action' => '\Swagger\Client\Model\FacebookCallToAction',
        'facebook_cover_photo' => '\Swagger\Client\Model\FacebookCoverPhoto',
        'facebook_page_url' => 'string',
        'facebook_profile_photo' => '\Swagger\Client\Model\FacebookProfilePhoto',
        'fax' => 'string',
        'featured_message' => '\Swagger\Client\Model\FeaturedMessage',
        'first_party_review_page' => 'string',
        'google_cover_photo' => '\Swagger\Client\Model\GoogleCoverPhoto',
        'google_preferred_photo' => 'string',
        'google_profile_photo' => '\Swagger\Client\Model\GoogleProfilePhoto',
        'google_website_override' => 'string',
        'holiday_hours_conversation_enabled' => 'bool',
        'hours' => '\Swagger\Client\Model\Hours',
        'instagram_handle' => 'string',
        'ios_app_url' => 'string',
        'iso_region_code' => 'string',
        'keywords' => 'string[]',
        'labels' => 'string[]',
        'languages' => 'string[]',
        'local_phone' => 'string',
        'location_type' => 'string',
        'logo' => '\Swagger\Client\Model\Logo',
        'main_phone' => 'string',
        'menu_url' => '\Swagger\Client\Model\MenuUrl',
        'menus' => '\Swagger\Client\Model\Menus',
        'mobile_phone' => 'string',
        'name' => 'string',
        'nudge_enabled' => 'bool',
        'order_url' => '\Swagger\Client\Model\OrderUrl',
        'payment_options' => 'string[]',
        'photo_gallery' => 'object[]',
        'pickup_coordinate' => '\Swagger\Client\Model\PickupCoordinate',
        'price_range' => 'string',
        'primary_conversation_contact' => 'string',
        'product_lists' => '\Swagger\Client\Model\ProductLists',
        'products' => 'string[]',
        'rank_tracking_competitors' => 'object[]',
        'rank_tracking_enabled' => 'bool',
        'rank_tracking_frequency' => 'string',
        'rank_tracking_query_templates' => 'string[]',
        'rank_tracking_sites' => 'string[]',
        'reservation_url' => '\Swagger\Client\Model\ReservationUrl',
        'review_generation_url' => 'string',
        'review_response_conversation_enabled' => 'bool',
        'routable_coordinate' => '\Swagger\Client\Model\RoutableCoordinate',
        'service_area' => '\Swagger\Client\Model\ServiceArea',
        'services' => 'string[]',
        'specialities' => 'string[]',
        'timezone' => 'string',
        'toll_free_phone' => 'string',
        'tty_phone' => 'string',
        'twitter_handle' => 'string',
        'uber_link' => '\Swagger\Client\Model\UberLink',
        'uber_trip_branding' => '\Swagger\Client\Model\UberTripBranding',
        'videos' => 'object[]',
        'walkable_coordinate' => '\Swagger\Client\Model\WalkableCoordinate',
        'website_url' => '\Swagger\Client\Model\WebsiteUrl',
        'year_established' => 'int',
        'yext_display_coordinate' => '\Swagger\Client\Model\YextDisplayCoordinate',
        'yext_dropoff_coordinate' => '\Swagger\Client\Model\YextDropoffCoordinate',
        'yext_pickup_coordinate' => '\Swagger\Client\Model\YextPickupCoordinate',
        'yext_routable_coordinate' => '\Swagger\Client\Model\YextRoutableCoordinate',
        'yext_walkable_coordinate' => '\Swagger\Client\Model\YextWalkableCoordinate'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'meta' => null,
        'additional_hours_text' => null,
        'address' => null,
        'address_hidden' => null,
        'alternate_names' => null,
        'alternate_phone' => null,
        'alternate_websites' => null,
        'android_app_url' => null,
        'associations' => null,
        'bios' => null,
        'brands' => null,
        'calendars' => null,
        'closed' => null,
        'custom_keywords' => null,
        'description' => null,
        'display_coordinate' => null,
        'dropoff_coordinate' => null,
        'emails' => null,
        'facebook_call_to_action' => null,
        'facebook_cover_photo' => null,
        'facebook_page_url' => null,
        'facebook_profile_photo' => null,
        'fax' => null,
        'featured_message' => null,
        'first_party_review_page' => null,
        'google_cover_photo' => null,
        'google_preferred_photo' => null,
        'google_profile_photo' => null,
        'google_website_override' => null,
        'holiday_hours_conversation_enabled' => null,
        'hours' => null,
        'instagram_handle' => null,
        'ios_app_url' => null,
        'iso_region_code' => null,
        'keywords' => null,
        'labels' => null,
        'languages' => null,
        'local_phone' => null,
        'location_type' => null,
        'logo' => null,
        'main_phone' => null,
        'menu_url' => null,
        'menus' => null,
        'mobile_phone' => null,
        'name' => null,
        'nudge_enabled' => null,
        'order_url' => null,
        'payment_options' => null,
        'photo_gallery' => null,
        'pickup_coordinate' => null,
        'price_range' => null,
        'primary_conversation_contact' => null,
        'product_lists' => null,
        'products' => null,
        'rank_tracking_competitors' => null,
        'rank_tracking_enabled' => null,
        'rank_tracking_frequency' => null,
        'rank_tracking_query_templates' => null,
        'rank_tracking_sites' => null,
        'reservation_url' => null,
        'review_generation_url' => null,
        'review_response_conversation_enabled' => null,
        'routable_coordinate' => null,
        'service_area' => null,
        'services' => null,
        'specialities' => null,
        'timezone' => null,
        'toll_free_phone' => null,
        'tty_phone' => null,
        'twitter_handle' => null,
        'uber_link' => null,
        'uber_trip_branding' => null,
        'videos' => null,
        'walkable_coordinate' => null,
        'website_url' => null,
        'year_established' => 'int32',
        'yext_display_coordinate' => null,
        'yext_dropoff_coordinate' => null,
        'yext_pickup_coordinate' => null,
        'yext_routable_coordinate' => null,
        'yext_walkable_coordinate' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'meta' => 'meta',
        'additional_hours_text' => 'additionalHoursText',
        'address' => 'address',
        'address_hidden' => 'addressHidden',
        'alternate_names' => 'alternateNames',
        'alternate_phone' => 'alternatePhone',
        'alternate_websites' => 'alternateWebsites',
        'android_app_url' => 'androidAppUrl',
        'associations' => 'associations',
        'bios' => 'bios',
        'brands' => 'brands',
        'calendars' => 'calendars',
        'closed' => 'closed',
        'custom_keywords' => 'customKeywords',
        'description' => 'description',
        'display_coordinate' => 'displayCoordinate',
        'dropoff_coordinate' => 'dropoffCoordinate',
        'emails' => 'emails',
        'facebook_call_to_action' => 'facebookCallToAction',
        'facebook_cover_photo' => 'facebookCoverPhoto',
        'facebook_page_url' => 'facebookPageUrl',
        'facebook_profile_photo' => 'facebookProfilePhoto',
        'fax' => 'fax',
        'featured_message' => 'featuredMessage',
        'first_party_review_page' => 'firstPartyReviewPage',
        'google_cover_photo' => 'googleCoverPhoto',
        'google_preferred_photo' => 'googlePreferredPhoto',
        'google_profile_photo' => 'googleProfilePhoto',
        'google_website_override' => 'googleWebsiteOverride',
        'holiday_hours_conversation_enabled' => 'holidayHoursConversationEnabled',
        'hours' => 'hours',
        'instagram_handle' => 'instagramHandle',
        'ios_app_url' => 'iosAppUrl',
        'iso_region_code' => 'isoRegionCode',
        'keywords' => 'keywords',
        'labels' => 'labels',
        'languages' => 'languages',
        'local_phone' => 'localPhone',
        'location_type' => 'locationType',
        'logo' => 'logo',
        'main_phone' => 'mainPhone',
        'menu_url' => 'menuUrl',
        'menus' => 'menus',
        'mobile_phone' => 'mobilePhone',
        'name' => 'name',
        'nudge_enabled' => 'nudgeEnabled',
        'order_url' => 'orderUrl',
        'payment_options' => 'paymentOptions',
        'photo_gallery' => 'photoGallery',
        'pickup_coordinate' => 'pickupCoordinate',
        'price_range' => 'priceRange',
        'primary_conversation_contact' => 'primaryConversationContact',
        'product_lists' => 'productLists',
        'products' => 'products',
        'rank_tracking_competitors' => 'rankTrackingCompetitors',
        'rank_tracking_enabled' => 'rankTrackingEnabled',
        'rank_tracking_frequency' => 'rankTrackingFrequency',
        'rank_tracking_query_templates' => 'rankTrackingQueryTemplates',
        'rank_tracking_sites' => 'rankTrackingSites',
        'reservation_url' => 'reservationUrl',
        'review_generation_url' => 'reviewGenerationUrl',
        'review_response_conversation_enabled' => 'reviewResponseConversationEnabled',
        'routable_coordinate' => 'routableCoordinate',
        'service_area' => 'serviceArea',
        'services' => 'services',
        'specialities' => 'specialities',
        'timezone' => 'timezone',
        'toll_free_phone' => 'tollFreePhone',
        'tty_phone' => 'ttyPhone',
        'twitter_handle' => 'twitterHandle',
        'uber_link' => 'uberLink',
        'uber_trip_branding' => 'uberTripBranding',
        'videos' => 'videos',
        'walkable_coordinate' => 'walkableCoordinate',
        'website_url' => 'websiteUrl',
        'year_established' => 'yearEstablished',
        'yext_display_coordinate' => 'yextDisplayCoordinate',
        'yext_dropoff_coordinate' => 'yextDropoffCoordinate',
        'yext_pickup_coordinate' => 'yextPickupCoordinate',
        'yext_routable_coordinate' => 'yextRoutableCoordinate',
        'yext_walkable_coordinate' => 'yextWalkableCoordinate'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'meta' => 'setMeta',
        'additional_hours_text' => 'setAdditionalHoursText',
        'address' => 'setAddress',
        'address_hidden' => 'setAddressHidden',
        'alternate_names' => 'setAlternateNames',
        'alternate_phone' => 'setAlternatePhone',
        'alternate_websites' => 'setAlternateWebsites',
        'android_app_url' => 'setAndroidAppUrl',
        'associations' => 'setAssociations',
        'bios' => 'setBios',
        'brands' => 'setBrands',
        'calendars' => 'setCalendars',
        'closed' => 'setClosed',
        'custom_keywords' => 'setCustomKeywords',
        'description' => 'setDescription',
        'display_coordinate' => 'setDisplayCoordinate',
        'dropoff_coordinate' => 'setDropoffCoordinate',
        'emails' => 'setEmails',
        'facebook_call_to_action' => 'setFacebookCallToAction',
        'facebook_cover_photo' => 'setFacebookCoverPhoto',
        'facebook_page_url' => 'setFacebookPageUrl',
        'facebook_profile_photo' => 'setFacebookProfilePhoto',
        'fax' => 'setFax',
        'featured_message' => 'setFeaturedMessage',
        'first_party_review_page' => 'setFirstPartyReviewPage',
        'google_cover_photo' => 'setGoogleCoverPhoto',
        'google_preferred_photo' => 'setGooglePreferredPhoto',
        'google_profile_photo' => 'setGoogleProfilePhoto',
        'google_website_override' => 'setGoogleWebsiteOverride',
        'holiday_hours_conversation_enabled' => 'setHolidayHoursConversationEnabled',
        'hours' => 'setHours',
        'instagram_handle' => 'setInstagramHandle',
        'ios_app_url' => 'setIosAppUrl',
        'iso_region_code' => 'setIsoRegionCode',
        'keywords' => 'setKeywords',
        'labels' => 'setLabels',
        'languages' => 'setLanguages',
        'local_phone' => 'setLocalPhone',
        'location_type' => 'setLocationType',
        'logo' => 'setLogo',
        'main_phone' => 'setMainPhone',
        'menu_url' => 'setMenuUrl',
        'menus' => 'setMenus',
        'mobile_phone' => 'setMobilePhone',
        'name' => 'setName',
        'nudge_enabled' => 'setNudgeEnabled',
        'order_url' => 'setOrderUrl',
        'payment_options' => 'setPaymentOptions',
        'photo_gallery' => 'setPhotoGallery',
        'pickup_coordinate' => 'setPickupCoordinate',
        'price_range' => 'setPriceRange',
        'primary_conversation_contact' => 'setPrimaryConversationContact',
        'product_lists' => 'setProductLists',
        'products' => 'setProducts',
        'rank_tracking_competitors' => 'setRankTrackingCompetitors',
        'rank_tracking_enabled' => 'setRankTrackingEnabled',
        'rank_tracking_frequency' => 'setRankTrackingFrequency',
        'rank_tracking_query_templates' => 'setRankTrackingQueryTemplates',
        'rank_tracking_sites' => 'setRankTrackingSites',
        'reservation_url' => 'setReservationUrl',
        'review_generation_url' => 'setReviewGenerationUrl',
        'review_response_conversation_enabled' => 'setReviewResponseConversationEnabled',
        'routable_coordinate' => 'setRoutableCoordinate',
        'service_area' => 'setServiceArea',
        'services' => 'setServices',
        'specialities' => 'setSpecialities',
        'timezone' => 'setTimezone',
        'toll_free_phone' => 'setTollFreePhone',
        'tty_phone' => 'setTtyPhone',
        'twitter_handle' => 'setTwitterHandle',
        'uber_link' => 'setUberLink',
        'uber_trip_branding' => 'setUberTripBranding',
        'videos' => 'setVideos',
        'walkable_coordinate' => 'setWalkableCoordinate',
        'website_url' => 'setWebsiteUrl',
        'year_established' => 'setYearEstablished',
        'yext_display_coordinate' => 'setYextDisplayCoordinate',
        'yext_dropoff_coordinate' => 'setYextDropoffCoordinate',
        'yext_pickup_coordinate' => 'setYextPickupCoordinate',
        'yext_routable_coordinate' => 'setYextRoutableCoordinate',
        'yext_walkable_coordinate' => 'setYextWalkableCoordinate'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'meta' => 'getMeta',
        'additional_hours_text' => 'getAdditionalHoursText',
        'address' => 'getAddress',
        'address_hidden' => 'getAddressHidden',
        'alternate_names' => 'getAlternateNames',
        'alternate_phone' => 'getAlternatePhone',
        'alternate_websites' => 'getAlternateWebsites',
        'android_app_url' => 'getAndroidAppUrl',
        'associations' => 'getAssociations',
        'bios' => 'getBios',
        'brands' => 'getBrands',
        'calendars' => 'getCalendars',
        'closed' => 'getClosed',
        'custom_keywords' => 'getCustomKeywords',
        'description' => 'getDescription',
        'display_coordinate' => 'getDisplayCoordinate',
        'dropoff_coordinate' => 'getDropoffCoordinate',
        'emails' => 'getEmails',
        'facebook_call_to_action' => 'getFacebookCallToAction',
        'facebook_cover_photo' => 'getFacebookCoverPhoto',
        'facebook_page_url' => 'getFacebookPageUrl',
        'facebook_profile_photo' => 'getFacebookProfilePhoto',
        'fax' => 'getFax',
        'featured_message' => 'getFeaturedMessage',
        'first_party_review_page' => 'getFirstPartyReviewPage',
        'google_cover_photo' => 'getGoogleCoverPhoto',
        'google_preferred_photo' => 'getGooglePreferredPhoto',
        'google_profile_photo' => 'getGoogleProfilePhoto',
        'google_website_override' => 'getGoogleWebsiteOverride',
        'holiday_hours_conversation_enabled' => 'getHolidayHoursConversationEnabled',
        'hours' => 'getHours',
        'instagram_handle' => 'getInstagramHandle',
        'ios_app_url' => 'getIosAppUrl',
        'iso_region_code' => 'getIsoRegionCode',
        'keywords' => 'getKeywords',
        'labels' => 'getLabels',
        'languages' => 'getLanguages',
        'local_phone' => 'getLocalPhone',
        'location_type' => 'getLocationType',
        'logo' => 'getLogo',
        'main_phone' => 'getMainPhone',
        'menu_url' => 'getMenuUrl',
        'menus' => 'getMenus',
        'mobile_phone' => 'getMobilePhone',
        'name' => 'getName',
        'nudge_enabled' => 'getNudgeEnabled',
        'order_url' => 'getOrderUrl',
        'payment_options' => 'getPaymentOptions',
        'photo_gallery' => 'getPhotoGallery',
        'pickup_coordinate' => 'getPickupCoordinate',
        'price_range' => 'getPriceRange',
        'primary_conversation_contact' => 'getPrimaryConversationContact',
        'product_lists' => 'getProductLists',
        'products' => 'getProducts',
        'rank_tracking_competitors' => 'getRankTrackingCompetitors',
        'rank_tracking_enabled' => 'getRankTrackingEnabled',
        'rank_tracking_frequency' => 'getRankTrackingFrequency',
        'rank_tracking_query_templates' => 'getRankTrackingQueryTemplates',
        'rank_tracking_sites' => 'getRankTrackingSites',
        'reservation_url' => 'getReservationUrl',
        'review_generation_url' => 'getReviewGenerationUrl',
        'review_response_conversation_enabled' => 'getReviewResponseConversationEnabled',
        'routable_coordinate' => 'getRoutableCoordinate',
        'service_area' => 'getServiceArea',
        'services' => 'getServices',
        'specialities' => 'getSpecialities',
        'timezone' => 'getTimezone',
        'toll_free_phone' => 'getTollFreePhone',
        'tty_phone' => 'getTtyPhone',
        'twitter_handle' => 'getTwitterHandle',
        'uber_link' => 'getUberLink',
        'uber_trip_branding' => 'getUberTripBranding',
        'videos' => 'getVideos',
        'walkable_coordinate' => 'getWalkableCoordinate',
        'website_url' => 'getWebsiteUrl',
        'year_established' => 'getYearEstablished',
        'yext_display_coordinate' => 'getYextDisplayCoordinate',
        'yext_dropoff_coordinate' => 'getYextDropoffCoordinate',
        'yext_pickup_coordinate' => 'getYextPickupCoordinate',
        'yext_routable_coordinate' => 'getYextRoutableCoordinate',
        'yext_walkable_coordinate' => 'getYextWalkableCoordinate'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['meta'] = isset($data['meta']) ? $data['meta'] : null;
        $this->container['additional_hours_text'] = isset($data['additional_hours_text']) ? $data['additional_hours_text'] : null;
        $this->container['address'] = isset($data['address']) ? $data['address'] : null;
        $this->container['address_hidden'] = isset($data['address_hidden']) ? $data['address_hidden'] : null;
        $this->container['alternate_names'] = isset($data['alternate_names']) ? $data['alternate_names'] : null;
        $this->container['alternate_phone'] = isset($data['alternate_phone']) ? $data['alternate_phone'] : null;
        $this->container['alternate_websites'] = isset($data['alternate_websites']) ? $data['alternate_websites'] : null;
        $this->container['android_app_url'] = isset($data['android_app_url']) ? $data['android_app_url'] : null;
        $this->container['associations'] = isset($data['associations']) ? $data['associations'] : null;
        $this->container['bios'] = isset($data['bios']) ? $data['bios'] : null;
        $this->container['brands'] = isset($data['brands']) ? $data['brands'] : null;
        $this->container['calendars'] = isset($data['calendars']) ? $data['calendars'] : null;
        $this->container['closed'] = isset($data['closed']) ? $data['closed'] : null;
        $this->container['custom_keywords'] = isset($data['custom_keywords']) ? $data['custom_keywords'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['display_coordinate'] = isset($data['display_coordinate']) ? $data['display_coordinate'] : null;
        $this->container['dropoff_coordinate'] = isset($data['dropoff_coordinate']) ? $data['dropoff_coordinate'] : null;
        $this->container['emails'] = isset($data['emails']) ? $data['emails'] : null;
        $this->container['facebook_call_to_action'] = isset($data['facebook_call_to_action']) ? $data['facebook_call_to_action'] : null;
        $this->container['facebook_cover_photo'] = isset($data['facebook_cover_photo']) ? $data['facebook_cover_photo'] : null;
        $this->container['facebook_page_url'] = isset($data['facebook_page_url']) ? $data['facebook_page_url'] : null;
        $this->container['facebook_profile_photo'] = isset($data['facebook_profile_photo']) ? $data['facebook_profile_photo'] : null;
        $this->container['fax'] = isset($data['fax']) ? $data['fax'] : null;
        $this->container['featured_message'] = isset($data['featured_message']) ? $data['featured_message'] : null;
        $this->container['first_party_review_page'] = isset($data['first_party_review_page']) ? $data['first_party_review_page'] : null;
        $this->container['google_cover_photo'] = isset($data['google_cover_photo']) ? $data['google_cover_photo'] : null;
        $this->container['google_preferred_photo'] = isset($data['google_preferred_photo']) ? $data['google_preferred_photo'] : null;
        $this->container['google_profile_photo'] = isset($data['google_profile_photo']) ? $data['google_profile_photo'] : null;
        $this->container['google_website_override'] = isset($data['google_website_override']) ? $data['google_website_override'] : null;
        $this->container['holiday_hours_conversation_enabled'] = isset($data['holiday_hours_conversation_enabled']) ? $data['holiday_hours_conversation_enabled'] : null;
        $this->container['hours'] = isset($data['hours']) ? $data['hours'] : null;
        $this->container['instagram_handle'] = isset($data['instagram_handle']) ? $data['instagram_handle'] : null;
        $this->container['ios_app_url'] = isset($data['ios_app_url']) ? $data['ios_app_url'] : null;
        $this->container['iso_region_code'] = isset($data['iso_region_code']) ? $data['iso_region_code'] : null;
        $this->container['keywords'] = isset($data['keywords']) ? $data['keywords'] : null;
        $this->container['labels'] = isset($data['labels']) ? $data['labels'] : null;
        $this->container['languages'] = isset($data['languages']) ? $data['languages'] : null;
        $this->container['local_phone'] = isset($data['local_phone']) ? $data['local_phone'] : null;
        $this->container['location_type'] = isset($data['location_type']) ? $data['location_type'] : null;
        $this->container['logo'] = isset($data['logo']) ? $data['logo'] : null;
        $this->container['main_phone'] = isset($data['main_phone']) ? $data['main_phone'] : null;
        $this->container['menu_url'] = isset($data['menu_url']) ? $data['menu_url'] : null;
        $this->container['menus'] = isset($data['menus']) ? $data['menus'] : null;
        $this->container['mobile_phone'] = isset($data['mobile_phone']) ? $data['mobile_phone'] : null;
        $this->container['name'] = isset($data['name']) ? $data['name'] : null;
        $this->container['nudge_enabled'] = isset($data['nudge_enabled']) ? $data['nudge_enabled'] : null;
        $this->container['order_url'] = isset($data['order_url']) ? $data['order_url'] : null;
        $this->container['payment_options'] = isset($data['payment_options']) ? $data['payment_options'] : null;
        $this->container['photo_gallery'] = isset($data['photo_gallery']) ? $data['photo_gallery'] : null;
        $this->container['pickup_coordinate'] = isset($data['pickup_coordinate']) ? $data['pickup_coordinate'] : null;
        $this->container['price_range'] = isset($data['price_range']) ? $data['price_range'] : null;
        $this->container['primary_conversation_contact'] = isset($data['primary_conversation_contact']) ? $data['primary_conversation_contact'] : null;
        $this->container['product_lists'] = isset($data['product_lists']) ? $data['product_lists'] : null;
        $this->container['products'] = isset($data['products']) ? $data['products'] : null;
        $this->container['rank_tracking_competitors'] = isset($data['rank_tracking_competitors']) ? $data['rank_tracking_competitors'] : null;
        $this->container['rank_tracking_enabled'] = isset($data['rank_tracking_enabled']) ? $data['rank_tracking_enabled'] : null;
        $this->container['rank_tracking_frequency'] = isset($data['rank_tracking_frequency']) ? $data['rank_tracking_frequency'] : null;
        $this->container['rank_tracking_query_templates'] = isset($data['rank_tracking_query_templates']) ? $data['rank_tracking_query_templates'] : null;
        $this->container['rank_tracking_sites'] = isset($data['rank_tracking_sites']) ? $data['rank_tracking_sites'] : null;
        $this->container['reservation_url'] = isset($data['reservation_url']) ? $data['reservation_url'] : null;
        $this->container['review_generation_url'] = isset($data['review_generation_url']) ? $data['review_generation_url'] : null;
        $this->container['review_response_conversation_enabled'] = isset($data['review_response_conversation_enabled']) ? $data['review_response_conversation_enabled'] : null;
        $this->container['routable_coordinate'] = isset($data['routable_coordinate']) ? $data['routable_coordinate'] : null;
        $this->container['service_area'] = isset($data['service_area']) ? $data['service_area'] : null;
        $this->container['services'] = isset($data['services']) ? $data['services'] : null;
        $this->container['specialities'] = isset($data['specialities']) ? $data['specialities'] : null;
        $this->container['timezone'] = isset($data['timezone']) ? $data['timezone'] : null;
        $this->container['toll_free_phone'] = isset($data['toll_free_phone']) ? $data['toll_free_phone'] : null;
        $this->container['tty_phone'] = isset($data['tty_phone']) ? $data['tty_phone'] : null;
        $this->container['twitter_handle'] = isset($data['twitter_handle']) ? $data['twitter_handle'] : null;
        $this->container['uber_link'] = isset($data['uber_link']) ? $data['uber_link'] : null;
        $this->container['uber_trip_branding'] = isset($data['uber_trip_branding']) ? $data['uber_trip_branding'] : null;
        $this->container['videos'] = isset($data['videos']) ? $data['videos'] : null;
        $this->container['walkable_coordinate'] = isset($data['walkable_coordinate']) ? $data['walkable_coordinate'] : null;
        $this->container['website_url'] = isset($data['website_url']) ? $data['website_url'] : null;
        $this->container['year_established'] = isset($data['year_established']) ? $data['year_established'] : null;
        $this->container['yext_display_coordinate'] = isset($data['yext_display_coordinate']) ? $data['yext_display_coordinate'] : null;
        $this->container['yext_dropoff_coordinate'] = isset($data['yext_dropoff_coordinate']) ? $data['yext_dropoff_coordinate'] : null;
        $this->container['yext_pickup_coordinate'] = isset($data['yext_pickup_coordinate']) ? $data['yext_pickup_coordinate'] : null;
        $this->container['yext_routable_coordinate'] = isset($data['yext_routable_coordinate']) ? $data['yext_routable_coordinate'] : null;
        $this->container['yext_walkable_coordinate'] = isset($data['yext_walkable_coordinate']) ? $data['yext_walkable_coordinate'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['meta'] === null) {
            $invalidProperties[] = "'meta' can't be null";
        }
        if ($this->container['additional_hours_text'] === null) {
            $invalidProperties[] = "'additional_hours_text' can't be null";
        }
        if ($this->container['address'] === null) {
            $invalidProperties[] = "'address' can't be null";
        }
        if ($this->container['address_hidden'] === null) {
            $invalidProperties[] = "'address_hidden' can't be null";
        }
        if ($this->container['alternate_names'] === null) {
            $invalidProperties[] = "'alternate_names' can't be null";
        }
        if ($this->container['alternate_phone'] === null) {
            $invalidProperties[] = "'alternate_phone' can't be null";
        }
        if ($this->container['alternate_websites'] === null) {
            $invalidProperties[] = "'alternate_websites' can't be null";
        }
        if ($this->container['android_app_url'] === null) {
            $invalidProperties[] = "'android_app_url' can't be null";
        }
        if ($this->container['associations'] === null) {
            $invalidProperties[] = "'associations' can't be null";
        }
        if ($this->container['bios'] === null) {
            $invalidProperties[] = "'bios' can't be null";
        }
        if ($this->container['brands'] === null) {
            $invalidProperties[] = "'brands' can't be null";
        }
        if ($this->container['calendars'] === null) {
            $invalidProperties[] = "'calendars' can't be null";
        }
        if ($this->container['closed'] === null) {
            $invalidProperties[] = "'closed' can't be null";
        }
        if ($this->container['custom_keywords'] === null) {
            $invalidProperties[] = "'custom_keywords' can't be null";
        }
        if ($this->container['description'] === null) {
            $invalidProperties[] = "'description' can't be null";
        }
        if ($this->container['display_coordinate'] === null) {
            $invalidProperties[] = "'display_coordinate' can't be null";
        }
        if ($this->container['dropoff_coordinate'] === null) {
            $invalidProperties[] = "'dropoff_coordinate' can't be null";
        }
        if ($this->container['emails'] === null) {
            $invalidProperties[] = "'emails' can't be null";
        }
        if ($this->container['facebook_call_to_action'] === null) {
            $invalidProperties[] = "'facebook_call_to_action' can't be null";
        }
        if ($this->container['facebook_cover_photo'] === null) {
            $invalidProperties[] = "'facebook_cover_photo' can't be null";
        }
        if ($this->container['facebook_page_url'] === null) {
            $invalidProperties[] = "'facebook_page_url' can't be null";
        }
        if ($this->container['facebook_profile_photo'] === null) {
            $invalidProperties[] = "'facebook_profile_photo' can't be null";
        }
        if ($this->container['fax'] === null) {
            $invalidProperties[] = "'fax' can't be null";
        }
        if ($this->container['featured_message'] === null) {
            $invalidProperties[] = "'featured_message' can't be null";
        }
        if ($this->container['first_party_review_page'] === null) {
            $invalidProperties[] = "'first_party_review_page' can't be null";
        }
        if ($this->container['google_cover_photo'] === null) {
            $invalidProperties[] = "'google_cover_photo' can't be null";
        }
        if ($this->container['google_preferred_photo'] === null) {
            $invalidProperties[] = "'google_preferred_photo' can't be null";
        }
        if ($this->container['google_profile_photo'] === null) {
            $invalidProperties[] = "'google_profile_photo' can't be null";
        }
        if ($this->container['google_website_override'] === null) {
            $invalidProperties[] = "'google_website_override' can't be null";
        }
        if ($this->container['holiday_hours_conversation_enabled'] === null) {
            $invalidProperties[] = "'holiday_hours_conversation_enabled' can't be null";
        }
        if ($this->container['hours'] === null) {
            $invalidProperties[] = "'hours' can't be null";
        }
        if ($this->container['instagram_handle'] === null) {
            $invalidProperties[] = "'instagram_handle' can't be null";
        }
        if ($this->container['ios_app_url'] === null) {
            $invalidProperties[] = "'ios_app_url' can't be null";
        }
        if ($this->container['iso_region_code'] === null) {
            $invalidProperties[] = "'iso_region_code' can't be null";
        }
        if ($this->container['keywords'] === null) {
            $invalidProperties[] = "'keywords' can't be null";
        }
        if ($this->container['labels'] === null) {
            $invalidProperties[] = "'labels' can't be null";
        }
        if ($this->container['languages'] === null) {
            $invalidProperties[] = "'languages' can't be null";
        }
        if ($this->container['local_phone'] === null) {
            $invalidProperties[] = "'local_phone' can't be null";
        }
        if ($this->container['location_type'] === null) {
            $invalidProperties[] = "'location_type' can't be null";
        }
        if ($this->container['logo'] === null) {
            $invalidProperties[] = "'logo' can't be null";
        }
        if ($this->container['main_phone'] === null) {
            $invalidProperties[] = "'main_phone' can't be null";
        }
        if ($this->container['menu_url'] === null) {
            $invalidProperties[] = "'menu_url' can't be null";
        }
        if ($this->container['menus'] === null) {
            $invalidProperties[] = "'menus' can't be null";
        }
        if ($this->container['mobile_phone'] === null) {
            $invalidProperties[] = "'mobile_phone' can't be null";
        }
        if ($this->container['name'] === null) {
            $invalidProperties[] = "'name' can't be null";
        }
        if ($this->container['nudge_enabled'] === null) {
            $invalidProperties[] = "'nudge_enabled' can't be null";
        }
        if ($this->container['order_url'] === null) {
            $invalidProperties[] = "'order_url' can't be null";
        }
        if ($this->container['payment_options'] === null) {
            $invalidProperties[] = "'payment_options' can't be null";
        }
        if ($this->container['photo_gallery'] === null) {
            $invalidProperties[] = "'photo_gallery' can't be null";
        }
        if ($this->container['pickup_coordinate'] === null) {
            $invalidProperties[] = "'pickup_coordinate' can't be null";
        }
        if ($this->container['price_range'] === null) {
            $invalidProperties[] = "'price_range' can't be null";
        }
        if ($this->container['primary_conversation_contact'] === null) {
            $invalidProperties[] = "'primary_conversation_contact' can't be null";
        }
        if ($this->container['product_lists'] === null) {
            $invalidProperties[] = "'product_lists' can't be null";
        }
        if ($this->container['products'] === null) {
            $invalidProperties[] = "'products' can't be null";
        }
        if ($this->container['rank_tracking_competitors'] === null) {
            $invalidProperties[] = "'rank_tracking_competitors' can't be null";
        }
        if ($this->container['rank_tracking_enabled'] === null) {
            $invalidProperties[] = "'rank_tracking_enabled' can't be null";
        }
        if ($this->container['rank_tracking_frequency'] === null) {
            $invalidProperties[] = "'rank_tracking_frequency' can't be null";
        }
        if ($this->container['rank_tracking_query_templates'] === null) {
            $invalidProperties[] = "'rank_tracking_query_templates' can't be null";
        }
        if ($this->container['rank_tracking_sites'] === null) {
            $invalidProperties[] = "'rank_tracking_sites' can't be null";
        }
        if ($this->container['reservation_url'] === null) {
            $invalidProperties[] = "'reservation_url' can't be null";
        }
        if ($this->container['review_generation_url'] === null) {
            $invalidProperties[] = "'review_generation_url' can't be null";
        }
        if ($this->container['review_response_conversation_enabled'] === null) {
            $invalidProperties[] = "'review_response_conversation_enabled' can't be null";
        }
        if ($this->container['routable_coordinate'] === null) {
            $invalidProperties[] = "'routable_coordinate' can't be null";
        }
        if ($this->container['service_area'] === null) {
            $invalidProperties[] = "'service_area' can't be null";
        }
        if ($this->container['services'] === null) {
            $invalidProperties[] = "'services' can't be null";
        }
        if ($this->container['specialities'] === null) {
            $invalidProperties[] = "'specialities' can't be null";
        }
        if ($this->container['timezone'] === null) {
            $invalidProperties[] = "'timezone' can't be null";
        }
        if ($this->container['toll_free_phone'] === null) {
            $invalidProperties[] = "'toll_free_phone' can't be null";
        }
        if ($this->container['tty_phone'] === null) {
            $invalidProperties[] = "'tty_phone' can't be null";
        }
        if ($this->container['twitter_handle'] === null) {
            $invalidProperties[] = "'twitter_handle' can't be null";
        }
        if ($this->container['uber_link'] === null) {
            $invalidProperties[] = "'uber_link' can't be null";
        }
        if ($this->container['uber_trip_branding'] === null) {
            $invalidProperties[] = "'uber_trip_branding' can't be null";
        }
        if ($this->container['videos'] === null) {
            $invalidProperties[] = "'videos' can't be null";
        }
        if ($this->container['walkable_coordinate'] === null) {
            $invalidProperties[] = "'walkable_coordinate' can't be null";
        }
        if ($this->container['website_url'] === null) {
            $invalidProperties[] = "'website_url' can't be null";
        }
        if ($this->container['year_established'] === null) {
            $invalidProperties[] = "'year_established' can't be null";
        }
        if ($this->container['yext_display_coordinate'] === null) {
            $invalidProperties[] = "'yext_display_coordinate' can't be null";
        }
        if ($this->container['yext_dropoff_coordinate'] === null) {
            $invalidProperties[] = "'yext_dropoff_coordinate' can't be null";
        }
        if ($this->container['yext_pickup_coordinate'] === null) {
            $invalidProperties[] = "'yext_pickup_coordinate' can't be null";
        }
        if ($this->container['yext_routable_coordinate'] === null) {
            $invalidProperties[] = "'yext_routable_coordinate' can't be null";
        }
        if ($this->container['yext_walkable_coordinate'] === null) {
            $invalidProperties[] = "'yext_walkable_coordinate' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets meta
     *
     * @return \Swagger\Client\Model\Meta
     */
    public function getMeta()
    {
        return $this->container['meta'];
    }

    /**
     * Sets meta
     *
     * @param \Swagger\Client\Model\Meta $meta meta
     *
     * @return $this
     */
    public function setMeta($meta)
    {
        $this->container['meta'] = $meta;

        return $this;
    }

    /**
     * Gets additional_hours_text
     *
     * @return string
     */
    public function getAdditionalHoursText()
    {
        return $this->container['additional_hours_text'];
    }

    /**
     * Sets additional_hours_text
     *
     * @param string $additional_hours_text additional_hours_text
     *
     * @return $this
     */
    public function setAdditionalHoursText($additional_hours_text)
    {
        $this->container['additional_hours_text'] = $additional_hours_text;

        return $this;
    }

    /**
     * Gets address
     *
     * @return \Swagger\Client\Model\Address
     */
    public function getAddress()
    {
        return $this->container['address'];
    }

    /**
     * Sets address
     *
     * @param \Swagger\Client\Model\Address $address address
     *
     * @return $this
     */
    public function setAddress($address)
    {
        $this->container['address'] = $address;

        return $this;
    }

    /**
     * Gets address_hidden
     *
     * @return bool
     */
    public function getAddressHidden()
    {
        return $this->container['address_hidden'];
    }

    /**
     * Sets address_hidden
     *
     * @param bool $address_hidden address_hidden
     *
     * @return $this
     */
    public function setAddressHidden($address_hidden)
    {
        $this->container['address_hidden'] = $address_hidden;

        return $this;
    }

    /**
     * Gets alternate_names
     *
     * @return string[]
     */
    public function getAlternateNames()
    {
        return $this->container['alternate_names'];
    }

    /**
     * Sets alternate_names
     *
     * @param string[] $alternate_names alternate_names
     *
     * @return $this
     */
    public function setAlternateNames($alternate_names)
    {
        $this->container['alternate_names'] = $alternate_names;

        return $this;
    }

    /**
     * Gets alternate_phone
     *
     * @return string
     */
    public function getAlternatePhone()
    {
        return $this->container['alternate_phone'];
    }

    /**
     * Sets alternate_phone
     *
     * @param string $alternate_phone alternate_phone
     *
     * @return $this
     */
    public function setAlternatePhone($alternate_phone)
    {
        $this->container['alternate_phone'] = $alternate_phone;

        return $this;
    }

    /**
     * Gets alternate_websites
     *
     * @return string[]
     */
    public function getAlternateWebsites()
    {
        return $this->container['alternate_websites'];
    }

    /**
     * Sets alternate_websites
     *
     * @param string[] $alternate_websites alternate_websites
     *
     * @return $this
     */
    public function setAlternateWebsites($alternate_websites)
    {
        $this->container['alternate_websites'] = $alternate_websites;

        return $this;
    }

    /**
     * Gets android_app_url
     *
     * @return string
     */
    public function getAndroidAppUrl()
    {
        return $this->container['android_app_url'];
    }

    /**
     * Sets android_app_url
     *
     * @param string $android_app_url android_app_url
     *
     * @return $this
     */
    public function setAndroidAppUrl($android_app_url)
    {
        $this->container['android_app_url'] = $android_app_url;

        return $this;
    }

    /**
     * Gets associations
     *
     * @return string[]
     */
    public function getAssociations()
    {
        return $this->container['associations'];
    }

    /**
     * Sets associations
     *
     * @param string[] $associations associations
     *
     * @return $this
     */
    public function setAssociations($associations)
    {
        $this->container['associations'] = $associations;

        return $this;
    }

    /**
     * Gets bios
     *
     * @return \Swagger\Client\Model\Bios
     */
    public function getBios()
    {
        return $this->container['bios'];
    }

    /**
     * Sets bios
     *
     * @param \Swagger\Client\Model\Bios $bios bios
     *
     * @return $this
     */
    public function setBios($bios)
    {
        $this->container['bios'] = $bios;

        return $this;
    }

    /**
     * Gets brands
     *
     * @return string[]
     */
    public function getBrands()
    {
        return $this->container['brands'];
    }

    /**
     * Sets brands
     *
     * @param string[] $brands brands
     *
     * @return $this
     */
    public function setBrands($brands)
    {
        $this->container['brands'] = $brands;

        return $this;
    }

    /**
     * Gets calendars
     *
     * @return \Swagger\Client\Model\Calendars
     */
    public function getCalendars()
    {
        return $this->container['calendars'];
    }

    /**
     * Sets calendars
     *
     * @param \Swagger\Client\Model\Calendars $calendars calendars
     *
     * @return $this
     */
    public function setCalendars($calendars)
    {
        $this->container['calendars'] = $calendars;

        return $this;
    }

    /**
     * Gets closed
     *
     * @return bool
     */
    public function getClosed()
    {
        return $this->container['closed'];
    }

    /**
     * Sets closed
     *
     * @param bool $closed closed
     *
     * @return $this
     */
    public function setClosed($closed)
    {
        $this->container['closed'] = $closed;

        return $this;
    }

    /**
     * Gets custom_keywords
     *
     * @return string[]
     */
    public function getCustomKeywords()
    {
        return $this->container['custom_keywords'];
    }

    /**
     * Sets custom_keywords
     *
     * @param string[] $custom_keywords custom_keywords
     *
     * @return $this
     */
    public function setCustomKeywords($custom_keywords)
    {
        $this->container['custom_keywords'] = $custom_keywords;

        return $this;
    }

    /**
     * Gets description
     *
     * @return string
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param string $description description
     *
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets display_coordinate
     *
     * @return \Swagger\Client\Model\DisplayCoordinate
     */
    public function getDisplayCoordinate()
    {
        return $this->container['display_coordinate'];
    }

    /**
     * Sets display_coordinate
     *
     * @param \Swagger\Client\Model\DisplayCoordinate $display_coordinate display_coordinate
     *
     * @return $this
     */
    public function setDisplayCoordinate($display_coordinate)
    {
        $this->container['display_coordinate'] = $display_coordinate;

        return $this;
    }

    /**
     * Gets dropoff_coordinate
     *
     * @return \Swagger\Client\Model\DropoffCoordinate
     */
    public function getDropoffCoordinate()
    {
        return $this->container['dropoff_coordinate'];
    }

    /**
     * Sets dropoff_coordinate
     *
     * @param \Swagger\Client\Model\DropoffCoordinate $dropoff_coordinate dropoff_coordinate
     *
     * @return $this
     */
    public function setDropoffCoordinate($dropoff_coordinate)
    {
        $this->container['dropoff_coordinate'] = $dropoff_coordinate;

        return $this;
    }

    /**
     * Gets emails
     *
     * @return string[]
     */
    public function getEmails()
    {
        return $this->container['emails'];
    }

    /**
     * Sets emails
     *
     * @param string[] $emails emails
     *
     * @return $this
     */
    public function setEmails($emails)
    {
        $this->container['emails'] = $emails;

        return $this;
    }

    /**
     * Gets facebook_call_to_action
     *
     * @return \Swagger\Client\Model\FacebookCallToAction
     */
    public function getFacebookCallToAction()
    {
        return $this->container['facebook_call_to_action'];
    }

    /**
     * Sets facebook_call_to_action
     *
     * @param \Swagger\Client\Model\FacebookCallToAction $facebook_call_to_action facebook_call_to_action
     *
     * @return $this
     */
    public function setFacebookCallToAction($facebook_call_to_action)
    {
        $this->container['facebook_call_to_action'] = $facebook_call_to_action;

        return $this;
    }

    /**
     * Gets facebook_cover_photo
     *
     * @return \Swagger\Client\Model\FacebookCoverPhoto
     */
    public function getFacebookCoverPhoto()
    {
        return $this->container['facebook_cover_photo'];
    }

    /**
     * Sets facebook_cover_photo
     *
     * @param \Swagger\Client\Model\FacebookCoverPhoto $facebook_cover_photo facebook_cover_photo
     *
     * @return $this
     */
    public function setFacebookCoverPhoto($facebook_cover_photo)
    {
        $this->container['facebook_cover_photo'] = $facebook_cover_photo;

        return $this;
    }

    /**
     * Gets facebook_page_url
     *
     * @return string
     */
    public function getFacebookPageUrl()
    {
        return $this->container['facebook_page_url'];
    }

    /**
     * Sets facebook_page_url
     *
     * @param string $facebook_page_url facebook_page_url
     *
     * @return $this
     */
    public function setFacebookPageUrl($facebook_page_url)
    {
        $this->container['facebook_page_url'] = $facebook_page_url;

        return $this;
    }

    /**
     * Gets facebook_profile_photo
     *
     * @return \Swagger\Client\Model\FacebookProfilePhoto
     */
    public function getFacebookProfilePhoto()
    {
        return $this->container['facebook_profile_photo'];
    }

    /**
     * Sets facebook_profile_photo
     *
     * @param \Swagger\Client\Model\FacebookProfilePhoto $facebook_profile_photo facebook_profile_photo
     *
     * @return $this
     */
    public function setFacebookProfilePhoto($facebook_profile_photo)
    {
        $this->container['facebook_profile_photo'] = $facebook_profile_photo;

        return $this;
    }

    /**
     * Gets fax
     *
     * @return string
     */
    public function getFax()
    {
        return $this->container['fax'];
    }

    /**
     * Sets fax
     *
     * @param string $fax fax
     *
     * @return $this
     */
    public function setFax($fax)
    {
        $this->container['fax'] = $fax;

        return $this;
    }

    /**
     * Gets featured_message
     *
     * @return \Swagger\Client\Model\FeaturedMessage
     */
    public function getFeaturedMessage()
    {
        return $this->container['featured_message'];
    }

    /**
     * Sets featured_message
     *
     * @param \Swagger\Client\Model\FeaturedMessage $featured_message featured_message
     *
     * @return $this
     */
    public function setFeaturedMessage($featured_message)
    {
        $this->container['featured_message'] = $featured_message;

        return $this;
    }

    /**
     * Gets first_party_review_page
     *
     * @return string
     */
    public function getFirstPartyReviewPage()
    {
        return $this->container['first_party_review_page'];
    }

    /**
     * Sets first_party_review_page
     *
     * @param string $first_party_review_page first_party_review_page
     *
     * @return $this
     */
    public function setFirstPartyReviewPage($first_party_review_page)
    {
        $this->container['first_party_review_page'] = $first_party_review_page;

        return $this;
    }

    /**
     * Gets google_cover_photo
     *
     * @return \Swagger\Client\Model\GoogleCoverPhoto
     */
    public function getGoogleCoverPhoto()
    {
        return $this->container['google_cover_photo'];
    }

    /**
     * Sets google_cover_photo
     *
     * @param \Swagger\Client\Model\GoogleCoverPhoto $google_cover_photo google_cover_photo
     *
     * @return $this
     */
    public function setGoogleCoverPhoto($google_cover_photo)
    {
        $this->container['google_cover_photo'] = $google_cover_photo;

        return $this;
    }

    /**
     * Gets google_preferred_photo
     *
     * @return string
     */
    public function getGooglePreferredPhoto()
    {
        return $this->container['google_preferred_photo'];
    }

    /**
     * Sets google_preferred_photo
     *
     * @param string $google_preferred_photo google_preferred_photo
     *
     * @return $this
     */
    public function setGooglePreferredPhoto($google_preferred_photo)
    {
        $this->container['google_preferred_photo'] = $google_preferred_photo;

        return $this;
    }

    /**
     * Gets google_profile_photo
     *
     * @return \Swagger\Client\Model\GoogleProfilePhoto
     */
    public function getGoogleProfilePhoto()
    {
        return $this->container['google_profile_photo'];
    }

    /**
     * Sets google_profile_photo
     *
     * @param \Swagger\Client\Model\GoogleProfilePhoto $google_profile_photo google_profile_photo
     *
     * @return $this
     */
    public function setGoogleProfilePhoto($google_profile_photo)
    {
        $this->container['google_profile_photo'] = $google_profile_photo;

        return $this;
    }

    /**
     * Gets google_website_override
     *
     * @return string
     */
    public function getGoogleWebsiteOverride()
    {
        return $this->container['google_website_override'];
    }

    /**
     * Sets google_website_override
     *
     * @param string $google_website_override google_website_override
     *
     * @return $this
     */
    public function setGoogleWebsiteOverride($google_website_override)
    {
        $this->container['google_website_override'] = $google_website_override;

        return $this;
    }

    /**
     * Gets holiday_hours_conversation_enabled
     *
     * @return bool
     */
    public function getHolidayHoursConversationEnabled()
    {
        return $this->container['holiday_hours_conversation_enabled'];
    }

    /**
     * Sets holiday_hours_conversation_enabled
     *
     * @param bool $holiday_hours_conversation_enabled holiday_hours_conversation_enabled
     *
     * @return $this
     */
    public function setHolidayHoursConversationEnabled($holiday_hours_conversation_enabled)
    {
        $this->container['holiday_hours_conversation_enabled'] = $holiday_hours_conversation_enabled;

        return $this;
    }

    /**
     * Gets hours
     *
     * @return \Swagger\Client\Model\Hours
     */
    public function getHours()
    {
        return $this->container['hours'];
    }

    /**
     * Sets hours
     *
     * @param \Swagger\Client\Model\Hours $hours hours
     *
     * @return $this
     */
    public function setHours($hours)
    {
        $this->container['hours'] = $hours;

        return $this;
    }

    /**
     * Gets instagram_handle
     *
     * @return string
     */
    public function getInstagramHandle()
    {
        return $this->container['instagram_handle'];
    }

    /**
     * Sets instagram_handle
     *
     * @param string $instagram_handle instagram_handle
     *
     * @return $this
     */
    public function setInstagramHandle($instagram_handle)
    {
        $this->container['instagram_handle'] = $instagram_handle;

        return $this;
    }

    /**
     * Gets ios_app_url
     *
     * @return string
     */
    public function getIosAppUrl()
    {
        return $this->container['ios_app_url'];
    }

    /**
     * Sets ios_app_url
     *
     * @param string $ios_app_url ios_app_url
     *
     * @return $this
     */
    public function setIosAppUrl($ios_app_url)
    {
        $this->container['ios_app_url'] = $ios_app_url;

        return $this;
    }

    /**
     * Gets iso_region_code
     *
     * @return string
     */
    public function getIsoRegionCode()
    {
        return $this->container['iso_region_code'];
    }

    /**
     * Sets iso_region_code
     *
     * @param string $iso_region_code iso_region_code
     *
     * @return $this
     */
    public function setIsoRegionCode($iso_region_code)
    {
        $this->container['iso_region_code'] = $iso_region_code;

        return $this;
    }

    /**
     * Gets keywords
     *
     * @return string[]
     */
    public function getKeywords()
    {
        return $this->container['keywords'];
    }

    /**
     * Sets keywords
     *
     * @param string[] $keywords keywords
     *
     * @return $this
     */
    public function setKeywords($keywords)
    {
        $this->container['keywords'] = $keywords;

        return $this;
    }

    /**
     * Gets labels
     *
     * @return string[]
     */
    public function getLabels()
    {
        return $this->container['labels'];
    }

    /**
     * Sets labels
     *
     * @param string[] $labels labels
     *
     * @return $this
     */
    public function setLabels($labels)
    {
        $this->container['labels'] = $labels;

        return $this;
    }

    /**
     * Gets languages
     *
     * @return string[]
     */
    public function getLanguages()
    {
        return $this->container['languages'];
    }

    /**
     * Sets languages
     *
     * @param string[] $languages languages
     *
     * @return $this
     */
    public function setLanguages($languages)
    {
        $this->container['languages'] = $languages;

        return $this;
    }

    /**
     * Gets local_phone
     *
     * @return string
     */
    public function getLocalPhone()
    {
        return $this->container['local_phone'];
    }

    /**
     * Sets local_phone
     *
     * @param string $local_phone local_phone
     *
     * @return $this
     */
    public function setLocalPhone($local_phone)
    {
        $this->container['local_phone'] = $local_phone;

        return $this;
    }

    /**
     * Gets location_type
     *
     * @return string
     */
    public function getLocationType()
    {
        return $this->container['location_type'];
    }

    /**
     * Sets location_type
     *
     * @param string $location_type location_type
     *
     * @return $this
     */
    public function setLocationType($location_type)
    {
        $this->container['location_type'] = $location_type;

        return $this;
    }

    /**
     * Gets logo
     *
     * @return \Swagger\Client\Model\Logo
     */
    public function getLogo()
    {
        return $this->container['logo'];
    }

    /**
     * Sets logo
     *
     * @param \Swagger\Client\Model\Logo $logo logo
     *
     * @return $this
     */
    public function setLogo($logo)
    {
        $this->container['logo'] = $logo;

        return $this;
    }

    /**
     * Gets main_phone
     *
     * @return string
     */
    public function getMainPhone()
    {
        return $this->container['main_phone'];
    }

    /**
     * Sets main_phone
     *
     * @param string $main_phone main_phone
     *
     * @return $this
     */
    public function setMainPhone($main_phone)
    {
        $this->container['main_phone'] = $main_phone;

        return $this;
    }

    /**
     * Gets menu_url
     *
     * @return \Swagger\Client\Model\MenuUrl
     */
    public function getMenuUrl()
    {
        return $this->container['menu_url'];
    }

    /**
     * Sets menu_url
     *
     * @param \Swagger\Client\Model\MenuUrl $menu_url menu_url
     *
     * @return $this
     */
    public function setMenuUrl($menu_url)
    {
        $this->container['menu_url'] = $menu_url;

        return $this;
    }

    /**
     * Gets menus
     *
     * @return \Swagger\Client\Model\Menus
     */
    public function getMenus()
    {
        return $this->container['menus'];
    }

    /**
     * Sets menus
     *
     * @param \Swagger\Client\Model\Menus $menus menus
     *
     * @return $this
     */
    public function setMenus($menus)
    {
        $this->container['menus'] = $menus;

        return $this;
    }

    /**
     * Gets mobile_phone
     *
     * @return string
     */
    public function getMobilePhone()
    {
        return $this->container['mobile_phone'];
    }

    /**
     * Sets mobile_phone
     *
     * @param string $mobile_phone mobile_phone
     *
     * @return $this
     */
    public function setMobilePhone($mobile_phone)
    {
        $this->container['mobile_phone'] = $mobile_phone;

        return $this;
    }

    /**
     * Gets name
     *
     * @return string
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string $name name
     *
     * @return $this
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets nudge_enabled
     *
     * @return bool
     */
    public function getNudgeEnabled()
    {
        return $this->container['nudge_enabled'];
    }

    /**
     * Sets nudge_enabled
     *
     * @param bool $nudge_enabled nudge_enabled
     *
     * @return $this
     */
    public function setNudgeEnabled($nudge_enabled)
    {
        $this->container['nudge_enabled'] = $nudge_enabled;

        return $this;
    }

    /**
     * Gets order_url
     *
     * @return \Swagger\Client\Model\OrderUrl
     */
    public function getOrderUrl()
    {
        return $this->container['order_url'];
    }

    /**
     * Sets order_url
     *
     * @param \Swagger\Client\Model\OrderUrl $order_url order_url
     *
     * @return $this
     */
    public function setOrderUrl($order_url)
    {
        $this->container['order_url'] = $order_url;

        return $this;
    }

    /**
     * Gets payment_options
     *
     * @return string[]
     */
    public function getPaymentOptions()
    {
        return $this->container['payment_options'];
    }

    /**
     * Sets payment_options
     *
     * @param string[] $payment_options payment_options
     *
     * @return $this
     */
    public function setPaymentOptions($payment_options)
    {
        $this->container['payment_options'] = $payment_options;

        return $this;
    }

    /**
     * Gets photo_gallery
     *
     * @return object[]
     */
    public function getPhotoGallery()
    {
        return $this->container['photo_gallery'];
    }

    /**
     * Sets photo_gallery
     *
     * @param object[] $photo_gallery photo_gallery
     *
     * @return $this
     */
    public function setPhotoGallery($photo_gallery)
    {
        $this->container['photo_gallery'] = $photo_gallery;

        return $this;
    }

    /**
     * Gets pickup_coordinate
     *
     * @return \Swagger\Client\Model\PickupCoordinate
     */
    public function getPickupCoordinate()
    {
        return $this->container['pickup_coordinate'];
    }

    /**
     * Sets pickup_coordinate
     *
     * @param \Swagger\Client\Model\PickupCoordinate $pickup_coordinate pickup_coordinate
     *
     * @return $this
     */
    public function setPickupCoordinate($pickup_coordinate)
    {
        $this->container['pickup_coordinate'] = $pickup_coordinate;

        return $this;
    }

    /**
     * Gets price_range
     *
     * @return string
     */
    public function getPriceRange()
    {
        return $this->container['price_range'];
    }

    /**
     * Sets price_range
     *
     * @param string $price_range price_range
     *
     * @return $this
     */
    public function setPriceRange($price_range)
    {
        $this->container['price_range'] = $price_range;

        return $this;
    }

    /**
     * Gets primary_conversation_contact
     *
     * @return string
     */
    public function getPrimaryConversationContact()
    {
        return $this->container['primary_conversation_contact'];
    }

    /**
     * Sets primary_conversation_contact
     *
     * @param string $primary_conversation_contact primary_conversation_contact
     *
     * @return $this
     */
    public function setPrimaryConversationContact($primary_conversation_contact)
    {
        $this->container['primary_conversation_contact'] = $primary_conversation_contact;

        return $this;
    }

    /**
     * Gets product_lists
     *
     * @return \Swagger\Client\Model\ProductLists
     */
    public function getProductLists()
    {
        return $this->container['product_lists'];
    }

    /**
     * Sets product_lists
     *
     * @param \Swagger\Client\Model\ProductLists $product_lists product_lists
     *
     * @return $this
     */
    public function setProductLists($product_lists)
    {
        $this->container['product_lists'] = $product_lists;

        return $this;
    }

    /**
     * Gets products
     *
     * @return string[]
     */
    public function getProducts()
    {
        return $this->container['products'];
    }

    /**
     * Sets products
     *
     * @param string[] $products products
     *
     * @return $this
     */
    public function setProducts($products)
    {
        $this->container['products'] = $products;

        return $this;
    }

    /**
     * Gets rank_tracking_competitors
     *
     * @return object[]
     */
    public function getRankTrackingCompetitors()
    {
        return $this->container['rank_tracking_competitors'];
    }

    /**
     * Sets rank_tracking_competitors
     *
     * @param object[] $rank_tracking_competitors rank_tracking_competitors
     *
     * @return $this
     */
    public function setRankTrackingCompetitors($rank_tracking_competitors)
    {
        $this->container['rank_tracking_competitors'] = $rank_tracking_competitors;

        return $this;
    }

    /**
     * Gets rank_tracking_enabled
     *
     * @return bool
     */
    public function getRankTrackingEnabled()
    {
        return $this->container['rank_tracking_enabled'];
    }

    /**
     * Sets rank_tracking_enabled
     *
     * @param bool $rank_tracking_enabled rank_tracking_enabled
     *
     * @return $this
     */
    public function setRankTrackingEnabled($rank_tracking_enabled)
    {
        $this->container['rank_tracking_enabled'] = $rank_tracking_enabled;

        return $this;
    }

    /**
     * Gets rank_tracking_frequency
     *
     * @return string
     */
    public function getRankTrackingFrequency()
    {
        return $this->container['rank_tracking_frequency'];
    }

    /**
     * Sets rank_tracking_frequency
     *
     * @param string $rank_tracking_frequency rank_tracking_frequency
     *
     * @return $this
     */
    public function setRankTrackingFrequency($rank_tracking_frequency)
    {
        $this->container['rank_tracking_frequency'] = $rank_tracking_frequency;

        return $this;
    }

    /**
     * Gets rank_tracking_query_templates
     *
     * @return string[]
     */
    public function getRankTrackingQueryTemplates()
    {
        return $this->container['rank_tracking_query_templates'];
    }

    /**
     * Sets rank_tracking_query_templates
     *
     * @param string[] $rank_tracking_query_templates rank_tracking_query_templates
     *
     * @return $this
     */
    public function setRankTrackingQueryTemplates($rank_tracking_query_templates)
    {
        $this->container['rank_tracking_query_templates'] = $rank_tracking_query_templates;

        return $this;
    }

    /**
     * Gets rank_tracking_sites
     *
     * @return string[]
     */
    public function getRankTrackingSites()
    {
        return $this->container['rank_tracking_sites'];
    }

    /**
     * Sets rank_tracking_sites
     *
     * @param string[] $rank_tracking_sites rank_tracking_sites
     *
     * @return $this
     */
    public function setRankTrackingSites($rank_tracking_sites)
    {
        $this->container['rank_tracking_sites'] = $rank_tracking_sites;

        return $this;
    }

    /**
     * Gets reservation_url
     *
     * @return \Swagger\Client\Model\ReservationUrl
     */
    public function getReservationUrl()
    {
        return $this->container['reservation_url'];
    }

    /**
     * Sets reservation_url
     *
     * @param \Swagger\Client\Model\ReservationUrl $reservation_url reservation_url
     *
     * @return $this
     */
    public function setReservationUrl($reservation_url)
    {
        $this->container['reservation_url'] = $reservation_url;

        return $this;
    }

    /**
     * Gets review_generation_url
     *
     * @return string
     */
    public function getReviewGenerationUrl()
    {
        return $this->container['review_generation_url'];
    }

    /**
     * Sets review_generation_url
     *
     * @param string $review_generation_url review_generation_url
     *
     * @return $this
     */
    public function setReviewGenerationUrl($review_generation_url)
    {
        $this->container['review_generation_url'] = $review_generation_url;

        return $this;
    }

    /**
     * Gets review_response_conversation_enabled
     *
     * @return bool
     */
    public function getReviewResponseConversationEnabled()
    {
        return $this->container['review_response_conversation_enabled'];
    }

    /**
     * Sets review_response_conversation_enabled
     *
     * @param bool $review_response_conversation_enabled review_response_conversation_enabled
     *
     * @return $this
     */
    public function setReviewResponseConversationEnabled($review_response_conversation_enabled)
    {
        $this->container['review_response_conversation_enabled'] = $review_response_conversation_enabled;

        return $this;
    }

    /**
     * Gets routable_coordinate
     *
     * @return \Swagger\Client\Model\RoutableCoordinate
     */
    public function getRoutableCoordinate()
    {
        return $this->container['routable_coordinate'];
    }

    /**
     * Sets routable_coordinate
     *
     * @param \Swagger\Client\Model\RoutableCoordinate $routable_coordinate routable_coordinate
     *
     * @return $this
     */
    public function setRoutableCoordinate($routable_coordinate)
    {
        $this->container['routable_coordinate'] = $routable_coordinate;

        return $this;
    }

    /**
     * Gets service_area
     *
     * @return \Swagger\Client\Model\ServiceArea
     */
    public function getServiceArea()
    {
        return $this->container['service_area'];
    }

    /**
     * Sets service_area
     *
     * @param \Swagger\Client\Model\ServiceArea $service_area service_area
     *
     * @return $this
     */
    public function setServiceArea($service_area)
    {
        $this->container['service_area'] = $service_area;

        return $this;
    }

    /**
     * Gets services
     *
     * @return string[]
     */
    public function getServices()
    {
        return $this->container['services'];
    }

    /**
     * Sets services
     *
     * @param string[] $services services
     *
     * @return $this
     */
    public function setServices($services)
    {
        $this->container['services'] = $services;

        return $this;
    }

    /**
     * Gets specialities
     *
     * @return string[]
     */
    public function getSpecialities()
    {
        return $this->container['specialities'];
    }

    /**
     * Sets specialities
     *
     * @param string[] $specialities specialities
     *
     * @return $this
     */
    public function setSpecialities($specialities)
    {
        $this->container['specialities'] = $specialities;

        return $this;
    }

    /**
     * Gets timezone
     *
     * @return string
     */
    public function getTimezone()
    {
        return $this->container['timezone'];
    }

    /**
     * Sets timezone
     *
     * @param string $timezone timezone
     *
     * @return $this
     */
    public function setTimezone($timezone)
    {
        $this->container['timezone'] = $timezone;

        return $this;
    }

    /**
     * Gets toll_free_phone
     *
     * @return string
     */
    public function getTollFreePhone()
    {
        return $this->container['toll_free_phone'];
    }

    /**
     * Sets toll_free_phone
     *
     * @param string $toll_free_phone toll_free_phone
     *
     * @return $this
     */
    public function setTollFreePhone($toll_free_phone)
    {
        $this->container['toll_free_phone'] = $toll_free_phone;

        return $this;
    }

    /**
     * Gets tty_phone
     *
     * @return string
     */
    public function getTtyPhone()
    {
        return $this->container['tty_phone'];
    }

    /**
     * Sets tty_phone
     *
     * @param string $tty_phone tty_phone
     *
     * @return $this
     */
    public function setTtyPhone($tty_phone)
    {
        $this->container['tty_phone'] = $tty_phone;

        return $this;
    }

    /**
     * Gets twitter_handle
     *
     * @return string
     */
    public function getTwitterHandle()
    {
        return $this->container['twitter_handle'];
    }

    /**
     * Sets twitter_handle
     *
     * @param string $twitter_handle twitter_handle
     *
     * @return $this
     */
    public function setTwitterHandle($twitter_handle)
    {
        $this->container['twitter_handle'] = $twitter_handle;

        return $this;
    }

    /**
     * Gets uber_link
     *
     * @return \Swagger\Client\Model\UberLink
     */
    public function getUberLink()
    {
        return $this->container['uber_link'];
    }

    /**
     * Sets uber_link
     *
     * @param \Swagger\Client\Model\UberLink $uber_link uber_link
     *
     * @return $this
     */
    public function setUberLink($uber_link)
    {
        $this->container['uber_link'] = $uber_link;

        return $this;
    }

    /**
     * Gets uber_trip_branding
     *
     * @return \Swagger\Client\Model\UberTripBranding
     */
    public function getUberTripBranding()
    {
        return $this->container['uber_trip_branding'];
    }

    /**
     * Sets uber_trip_branding
     *
     * @param \Swagger\Client\Model\UberTripBranding $uber_trip_branding uber_trip_branding
     *
     * @return $this
     */
    public function setUberTripBranding($uber_trip_branding)
    {
        $this->container['uber_trip_branding'] = $uber_trip_branding;

        return $this;
    }

    /**
     * Gets videos
     *
     * @return object[]
     */
    public function getVideos()
    {
        return $this->container['videos'];
    }

    /**
     * Sets videos
     *
     * @param object[] $videos videos
     *
     * @return $this
     */
    public function setVideos($videos)
    {
        $this->container['videos'] = $videos;

        return $this;
    }

    /**
     * Gets walkable_coordinate
     *
     * @return \Swagger\Client\Model\WalkableCoordinate
     */
    public function getWalkableCoordinate()
    {
        return $this->container['walkable_coordinate'];
    }

    /**
     * Sets walkable_coordinate
     *
     * @param \Swagger\Client\Model\WalkableCoordinate $walkable_coordinate walkable_coordinate
     *
     * @return $this
     */
    public function setWalkableCoordinate($walkable_coordinate)
    {
        $this->container['walkable_coordinate'] = $walkable_coordinate;

        return $this;
    }

    /**
     * Gets website_url
     *
     * @return \Swagger\Client\Model\WebsiteUrl
     */
    public function getWebsiteUrl()
    {
        return $this->container['website_url'];
    }

    /**
     * Sets website_url
     *
     * @param \Swagger\Client\Model\WebsiteUrl $website_url website_url
     *
     * @return $this
     */
    public function setWebsiteUrl($website_url)
    {
        $this->container['website_url'] = $website_url;

        return $this;
    }

    /**
     * Gets year_established
     *
     * @return int
     */
    public function getYearEstablished()
    {
        return $this->container['year_established'];
    }

    /**
     * Sets year_established
     *
     * @param int $year_established year_established
     *
     * @return $this
     */
    public function setYearEstablished($year_established)
    {
        $this->container['year_established'] = $year_established;

        return $this;
    }

    /**
     * Gets yext_display_coordinate
     *
     * @return \Swagger\Client\Model\YextDisplayCoordinate
     */
    public function getYextDisplayCoordinate()
    {
        return $this->container['yext_display_coordinate'];
    }

    /**
     * Sets yext_display_coordinate
     *
     * @param \Swagger\Client\Model\YextDisplayCoordinate $yext_display_coordinate yext_display_coordinate
     *
     * @return $this
     */
    public function setYextDisplayCoordinate($yext_display_coordinate)
    {
        $this->container['yext_display_coordinate'] = $yext_display_coordinate;

        return $this;
    }

    /**
     * Gets yext_dropoff_coordinate
     *
     * @return \Swagger\Client\Model\YextDropoffCoordinate
     */
    public function getYextDropoffCoordinate()
    {
        return $this->container['yext_dropoff_coordinate'];
    }

    /**
     * Sets yext_dropoff_coordinate
     *
     * @param \Swagger\Client\Model\YextDropoffCoordinate $yext_dropoff_coordinate yext_dropoff_coordinate
     *
     * @return $this
     */
    public function setYextDropoffCoordinate($yext_dropoff_coordinate)
    {
        $this->container['yext_dropoff_coordinate'] = $yext_dropoff_coordinate;

        return $this;
    }

    /**
     * Gets yext_pickup_coordinate
     *
     * @return \Swagger\Client\Model\YextPickupCoordinate
     */
    public function getYextPickupCoordinate()
    {
        return $this->container['yext_pickup_coordinate'];
    }

    /**
     * Sets yext_pickup_coordinate
     *
     * @param \Swagger\Client\Model\YextPickupCoordinate $yext_pickup_coordinate yext_pickup_coordinate
     *
     * @return $this
     */
    public function setYextPickupCoordinate($yext_pickup_coordinate)
    {
        $this->container['yext_pickup_coordinate'] = $yext_pickup_coordinate;

        return $this;
    }

    /**
     * Gets yext_routable_coordinate
     *
     * @return \Swagger\Client\Model\YextRoutableCoordinate
     */
    public function getYextRoutableCoordinate()
    {
        return $this->container['yext_routable_coordinate'];
    }

    /**
     * Sets yext_routable_coordinate
     *
     * @param \Swagger\Client\Model\YextRoutableCoordinate $yext_routable_coordinate yext_routable_coordinate
     *
     * @return $this
     */
    public function setYextRoutableCoordinate($yext_routable_coordinate)
    {
        $this->container['yext_routable_coordinate'] = $yext_routable_coordinate;

        return $this;
    }

    /**
     * Gets yext_walkable_coordinate
     *
     * @return \Swagger\Client\Model\YextWalkableCoordinate
     */
    public function getYextWalkableCoordinate()
    {
        return $this->container['yext_walkable_coordinate'];
    }

    /**
     * Sets yext_walkable_coordinate
     *
     * @param \Swagger\Client\Model\YextWalkableCoordinate $yext_walkable_coordinate yext_walkable_coordinate
     *
     * @return $this
     */
    public function setYextWalkableCoordinate($yext_walkable_coordinate)
    {
        $this->container['yext_walkable_coordinate'] = $yext_walkable_coordinate;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


