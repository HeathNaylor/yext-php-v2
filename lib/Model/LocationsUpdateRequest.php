<?php
/**
 * LocationsUpdateRequest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * developer.yext.com (read-only)
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.19-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * LocationsUpdateRequest Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class LocationsUpdateRequest implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'Locations:UpdateRequest';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'id' => 'string',
        'account_id' => 'string',
        'location_type' => 'string',
        'location_name' => 'string',
        'first_name' => 'string',
        'middle_name' => 'string',
        'last_name' => 'string',
        'office_name' => 'string',
        'gender' => 'string',
        'npi' => 'string',
        'address' => 'string',
        'address2' => 'string',
        'suppress_address' => 'bool',
        'display_address' => 'string',
        'city' => 'string',
        'state' => 'string',
        'sublocality' => 'string',
        'zip' => 'string',
        'country_code' => 'string',
        'service_area' => '\Swagger\Client\Model\ServiceArea8',
        'phone' => 'string',
        'is_phone_tracked' => 'bool',
        'local_phone' => 'string',
        'alternate_phone' => 'string',
        'fax_phone' => 'string',
        'mobile_phone' => 'string',
        'toll_free_phone' => 'string',
        'tty_phone' => 'string',
        'category_ids' => 'string[]',
        'featured_message' => 'string',
        'featured_message_url' => 'string',
        'website_url' => 'string',
        'display_website_url' => 'string',
        'reservation_url' => 'string',
        'display_reservation_url' => 'string',
        'menu_url' => 'string',
        'display_menu_url' => 'string',
        'order_url' => 'string',
        'display_order_url' => 'string',
        'hours' => 'string',
        'additional_hours_text' => 'string',
        'holiday_hours' => '\Swagger\Client\Model\HolidayHour10[]',
        'description' => 'string',
        'conditions_treated' => 'string[]',
        'certifications' => 'string[]',
        'education_list' => '\Swagger\Client\Model\EducationList[]',
        'degrees' => 'string[]',
        'admitting_hospitals' => 'string[]',
        'accepting_new_patients' => 'bool',
        'closed' => '\Swagger\Client\Model\Closed',
        'payment_options' => 'string[]',
        'insurance_accepted' => 'string[]',
        'logo' => '\Swagger\Client\Model\Logo10',
        'photos' => '\Swagger\Client\Model\Photo[]',
        'headshot' => '\Swagger\Client\Model\Headshot2',
        'video_urls' => 'string[]',
        'instagram_handle' => 'string',
        'twitter_handle' => 'string',
        'google_website_override' => 'string',
        'google_cover_photo' => '\Swagger\Client\Model\GoogleCoverPhoto8',
        'google_profile_photo' => '\Swagger\Client\Model\GoogleProfilePhoto8',
        'google_preferred_photo' => 'string',
        'google_attributes' => '\Swagger\Client\Model\GoogleAttribute[]',
        'facebook_page_url' => 'string',
        'facebook_cover_photo' => '\Swagger\Client\Model\FacebookCoverPhoto8',
        'facebook_profile_picture' => '\Swagger\Client\Model\FacebookProfilePicture',
        'uber_link_type' => 'string',
        'uber_link_text' => 'string',
        'uber_trip_branding_text' => 'string',
        'uber_trip_branding_url' => 'string',
        'uber_trip_branding_description' => 'string',
        'uber_client_id' => 'string',
        'year_established' => 'string',
        'display_lat' => 'int',
        'display_lng' => 'int',
        'routable_lat' => 'int',
        'routable_lng' => 'int',
        'walkable_lat' => 'int',
        'walkable_lng' => 'int',
        'pickup_lat' => 'int',
        'pickup_lng' => 'int',
        'dropoff_lat' => 'int',
        'dropoff_lng' => 'int',
        'emails' => 'string[]',
        'specialties' => 'string[]',
        'associations' => 'string[]',
        'products' => 'string[]',
        'services' => 'string[]',
        'brands' => 'string[]',
        'language' => 'string',
        'languages' => 'string[]',
        'keywords' => 'string[]',
        'menus_label' => 'string',
        'menu_ids' => 'string[]',
        'bio_lists_label' => 'string',
        'bio_list_ids' => 'string[]',
        'product_lists_label' => 'string',
        'product_list_ids' => 'string[]',
        'event_lists_label' => 'string',
        'event_list_ids' => 'string[]',
        'folder_id' => 'string',
        'label_ids' => 'string[]',
        'custom_fields' => '\Swagger\Client\Model\CustomFields',
        'intelligent_search_tracking_enabled' => 'bool',
        'intelligent_search_tracking_frequency' => 'string',
        'location_keywords' => 'string[]',
        'custom_keywords' => 'string[]',
        'query_templates' => 'string[]',
        'alternate_names' => 'string[]',
        'alternate_websites' => 'string[]',
        'competitors' => '\Swagger\Client\Model\Competitor[]',
        'tracking_sites' => 'string[]',
        'is_cluster_primary' => 'bool',
        'attire' => 'string',
        'price_range' => 'string',
        'meals_served' => 'string[]',
        'located_in' => 'string',
        'primary_contact' => 'string',
        'review_response_conversation_enabled' => 'bool',
        'holiday_hours_confirmation_enabled' => 'bool'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'id' => null,
        'account_id' => null,
        'location_type' => null,
        'location_name' => null,
        'first_name' => null,
        'middle_name' => null,
        'last_name' => null,
        'office_name' => null,
        'gender' => null,
        'npi' => null,
        'address' => null,
        'address2' => null,
        'suppress_address' => null,
        'display_address' => null,
        'city' => null,
        'state' => null,
        'sublocality' => null,
        'zip' => null,
        'country_code' => null,
        'service_area' => null,
        'phone' => null,
        'is_phone_tracked' => null,
        'local_phone' => null,
        'alternate_phone' => null,
        'fax_phone' => null,
        'mobile_phone' => null,
        'toll_free_phone' => null,
        'tty_phone' => null,
        'category_ids' => null,
        'featured_message' => null,
        'featured_message_url' => null,
        'website_url' => null,
        'display_website_url' => null,
        'reservation_url' => null,
        'display_reservation_url' => null,
        'menu_url' => null,
        'display_menu_url' => null,
        'order_url' => null,
        'display_order_url' => null,
        'hours' => null,
        'additional_hours_text' => null,
        'holiday_hours' => null,
        'description' => null,
        'conditions_treated' => null,
        'certifications' => null,
        'education_list' => null,
        'degrees' => null,
        'admitting_hospitals' => null,
        'accepting_new_patients' => null,
        'closed' => null,
        'payment_options' => null,
        'insurance_accepted' => null,
        'logo' => null,
        'photos' => null,
        'headshot' => null,
        'video_urls' => null,
        'instagram_handle' => null,
        'twitter_handle' => null,
        'google_website_override' => null,
        'google_cover_photo' => null,
        'google_profile_photo' => null,
        'google_preferred_photo' => null,
        'google_attributes' => null,
        'facebook_page_url' => null,
        'facebook_cover_photo' => null,
        'facebook_profile_picture' => null,
        'uber_link_type' => null,
        'uber_link_text' => null,
        'uber_trip_branding_text' => null,
        'uber_trip_branding_url' => null,
        'uber_trip_branding_description' => null,
        'uber_client_id' => null,
        'year_established' => null,
        'display_lat' => 'int32',
        'display_lng' => 'int32',
        'routable_lat' => 'int32',
        'routable_lng' => 'int32',
        'walkable_lat' => 'int32',
        'walkable_lng' => 'int32',
        'pickup_lat' => 'int32',
        'pickup_lng' => 'int32',
        'dropoff_lat' => 'int32',
        'dropoff_lng' => 'int32',
        'emails' => null,
        'specialties' => null,
        'associations' => null,
        'products' => null,
        'services' => null,
        'brands' => null,
        'language' => null,
        'languages' => null,
        'keywords' => null,
        'menus_label' => null,
        'menu_ids' => null,
        'bio_lists_label' => null,
        'bio_list_ids' => null,
        'product_lists_label' => null,
        'product_list_ids' => null,
        'event_lists_label' => null,
        'event_list_ids' => null,
        'folder_id' => null,
        'label_ids' => null,
        'custom_fields' => null,
        'intelligent_search_tracking_enabled' => null,
        'intelligent_search_tracking_frequency' => null,
        'location_keywords' => null,
        'custom_keywords' => null,
        'query_templates' => null,
        'alternate_names' => null,
        'alternate_websites' => null,
        'competitors' => null,
        'tracking_sites' => null,
        'is_cluster_primary' => null,
        'attire' => null,
        'price_range' => null,
        'meals_served' => null,
        'located_in' => null,
        'primary_contact' => null,
        'review_response_conversation_enabled' => null,
        'holiday_hours_confirmation_enabled' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'account_id' => 'accountId',
        'location_type' => 'locationType',
        'location_name' => 'locationName',
        'first_name' => 'firstName',
        'middle_name' => 'middleName',
        'last_name' => 'lastName',
        'office_name' => 'officeName',
        'gender' => 'gender',
        'npi' => 'npi',
        'address' => 'address',
        'address2' => 'address2',
        'suppress_address' => 'suppressAddress',
        'display_address' => 'displayAddress',
        'city' => 'city',
        'state' => 'state',
        'sublocality' => 'sublocality',
        'zip' => 'zip',
        'country_code' => 'countryCode',
        'service_area' => 'serviceArea',
        'phone' => 'phone',
        'is_phone_tracked' => 'isPhoneTracked',
        'local_phone' => 'localPhone',
        'alternate_phone' => 'alternatePhone',
        'fax_phone' => 'faxPhone',
        'mobile_phone' => 'mobilePhone',
        'toll_free_phone' => 'tollFreePhone',
        'tty_phone' => 'ttyPhone',
        'category_ids' => 'categoryIds',
        'featured_message' => 'featuredMessage',
        'featured_message_url' => 'featuredMessageUrl',
        'website_url' => 'websiteUrl',
        'display_website_url' => 'displayWebsiteUrl',
        'reservation_url' => 'reservationUrl',
        'display_reservation_url' => 'displayReservationUrl',
        'menu_url' => 'menuUrl',
        'display_menu_url' => 'displayMenuUrl',
        'order_url' => 'orderUrl',
        'display_order_url' => 'displayOrderUrl',
        'hours' => 'hours',
        'additional_hours_text' => 'additionalHoursText',
        'holiday_hours' => 'holidayHours',
        'description' => 'description',
        'conditions_treated' => 'conditionsTreated',
        'certifications' => 'certifications',
        'education_list' => 'educationList',
        'degrees' => 'degrees',
        'admitting_hospitals' => 'admittingHospitals',
        'accepting_new_patients' => 'acceptingNewPatients',
        'closed' => 'closed',
        'payment_options' => 'paymentOptions',
        'insurance_accepted' => 'insuranceAccepted',
        'logo' => 'logo',
        'photos' => 'photos',
        'headshot' => 'headshot',
        'video_urls' => 'videoUrls',
        'instagram_handle' => 'instagramHandle',
        'twitter_handle' => 'twitterHandle',
        'google_website_override' => 'googleWebsiteOverride',
        'google_cover_photo' => 'googleCoverPhoto',
        'google_profile_photo' => 'googleProfilePhoto',
        'google_preferred_photo' => 'googlePreferredPhoto',
        'google_attributes' => 'googleAttributes',
        'facebook_page_url' => 'facebookPageUrl',
        'facebook_cover_photo' => 'facebookCoverPhoto',
        'facebook_profile_picture' => 'facebookProfilePicture',
        'uber_link_type' => 'uberLinkType',
        'uber_link_text' => 'uberLinkText',
        'uber_trip_branding_text' => 'uberTripBrandingText',
        'uber_trip_branding_url' => 'uberTripBrandingUrl',
        'uber_trip_branding_description' => 'uberTripBrandingDescription',
        'uber_client_id' => 'uberClientId',
        'year_established' => 'yearEstablished',
        'display_lat' => 'displayLat',
        'display_lng' => 'displayLng',
        'routable_lat' => 'routableLat',
        'routable_lng' => 'routableLng',
        'walkable_lat' => 'walkableLat',
        'walkable_lng' => 'walkableLng',
        'pickup_lat' => 'pickupLat',
        'pickup_lng' => 'pickupLng',
        'dropoff_lat' => 'dropoffLat',
        'dropoff_lng' => 'dropoffLng',
        'emails' => 'emails',
        'specialties' => 'specialties',
        'associations' => 'associations',
        'products' => 'products',
        'services' => 'services',
        'brands' => 'brands',
        'language' => 'language',
        'languages' => 'languages',
        'keywords' => 'keywords',
        'menus_label' => 'menusLabel',
        'menu_ids' => 'menuIds',
        'bio_lists_label' => 'bioListsLabel',
        'bio_list_ids' => 'bioListIds',
        'product_lists_label' => 'productListsLabel',
        'product_list_ids' => 'productListIds',
        'event_lists_label' => 'eventListsLabel',
        'event_list_ids' => 'eventListIds',
        'folder_id' => 'folderId',
        'label_ids' => 'labelIds',
        'custom_fields' => 'customFields',
        'intelligent_search_tracking_enabled' => 'intelligentSearchTrackingEnabled',
        'intelligent_search_tracking_frequency' => 'intelligentSearchTrackingFrequency',
        'location_keywords' => 'locationKeywords',
        'custom_keywords' => 'customKeywords',
        'query_templates' => 'queryTemplates',
        'alternate_names' => 'alternateNames',
        'alternate_websites' => 'alternateWebsites',
        'competitors' => 'competitors',
        'tracking_sites' => 'trackingSites',
        'is_cluster_primary' => 'isClusterPrimary',
        'attire' => 'attire',
        'price_range' => 'priceRange',
        'meals_served' => 'mealsServed',
        'located_in' => 'locatedIn',
        'primary_contact' => 'primaryContact',
        'review_response_conversation_enabled' => 'reviewResponseConversationEnabled',
        'holiday_hours_confirmation_enabled' => 'holidayHoursConfirmationEnabled'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'account_id' => 'setAccountId',
        'location_type' => 'setLocationType',
        'location_name' => 'setLocationName',
        'first_name' => 'setFirstName',
        'middle_name' => 'setMiddleName',
        'last_name' => 'setLastName',
        'office_name' => 'setOfficeName',
        'gender' => 'setGender',
        'npi' => 'setNpi',
        'address' => 'setAddress',
        'address2' => 'setAddress2',
        'suppress_address' => 'setSuppressAddress',
        'display_address' => 'setDisplayAddress',
        'city' => 'setCity',
        'state' => 'setState',
        'sublocality' => 'setSublocality',
        'zip' => 'setZip',
        'country_code' => 'setCountryCode',
        'service_area' => 'setServiceArea',
        'phone' => 'setPhone',
        'is_phone_tracked' => 'setIsPhoneTracked',
        'local_phone' => 'setLocalPhone',
        'alternate_phone' => 'setAlternatePhone',
        'fax_phone' => 'setFaxPhone',
        'mobile_phone' => 'setMobilePhone',
        'toll_free_phone' => 'setTollFreePhone',
        'tty_phone' => 'setTtyPhone',
        'category_ids' => 'setCategoryIds',
        'featured_message' => 'setFeaturedMessage',
        'featured_message_url' => 'setFeaturedMessageUrl',
        'website_url' => 'setWebsiteUrl',
        'display_website_url' => 'setDisplayWebsiteUrl',
        'reservation_url' => 'setReservationUrl',
        'display_reservation_url' => 'setDisplayReservationUrl',
        'menu_url' => 'setMenuUrl',
        'display_menu_url' => 'setDisplayMenuUrl',
        'order_url' => 'setOrderUrl',
        'display_order_url' => 'setDisplayOrderUrl',
        'hours' => 'setHours',
        'additional_hours_text' => 'setAdditionalHoursText',
        'holiday_hours' => 'setHolidayHours',
        'description' => 'setDescription',
        'conditions_treated' => 'setConditionsTreated',
        'certifications' => 'setCertifications',
        'education_list' => 'setEducationList',
        'degrees' => 'setDegrees',
        'admitting_hospitals' => 'setAdmittingHospitals',
        'accepting_new_patients' => 'setAcceptingNewPatients',
        'closed' => 'setClosed',
        'payment_options' => 'setPaymentOptions',
        'insurance_accepted' => 'setInsuranceAccepted',
        'logo' => 'setLogo',
        'photos' => 'setPhotos',
        'headshot' => 'setHeadshot',
        'video_urls' => 'setVideoUrls',
        'instagram_handle' => 'setInstagramHandle',
        'twitter_handle' => 'setTwitterHandle',
        'google_website_override' => 'setGoogleWebsiteOverride',
        'google_cover_photo' => 'setGoogleCoverPhoto',
        'google_profile_photo' => 'setGoogleProfilePhoto',
        'google_preferred_photo' => 'setGooglePreferredPhoto',
        'google_attributes' => 'setGoogleAttributes',
        'facebook_page_url' => 'setFacebookPageUrl',
        'facebook_cover_photo' => 'setFacebookCoverPhoto',
        'facebook_profile_picture' => 'setFacebookProfilePicture',
        'uber_link_type' => 'setUberLinkType',
        'uber_link_text' => 'setUberLinkText',
        'uber_trip_branding_text' => 'setUberTripBrandingText',
        'uber_trip_branding_url' => 'setUberTripBrandingUrl',
        'uber_trip_branding_description' => 'setUberTripBrandingDescription',
        'uber_client_id' => 'setUberClientId',
        'year_established' => 'setYearEstablished',
        'display_lat' => 'setDisplayLat',
        'display_lng' => 'setDisplayLng',
        'routable_lat' => 'setRoutableLat',
        'routable_lng' => 'setRoutableLng',
        'walkable_lat' => 'setWalkableLat',
        'walkable_lng' => 'setWalkableLng',
        'pickup_lat' => 'setPickupLat',
        'pickup_lng' => 'setPickupLng',
        'dropoff_lat' => 'setDropoffLat',
        'dropoff_lng' => 'setDropoffLng',
        'emails' => 'setEmails',
        'specialties' => 'setSpecialties',
        'associations' => 'setAssociations',
        'products' => 'setProducts',
        'services' => 'setServices',
        'brands' => 'setBrands',
        'language' => 'setLanguage',
        'languages' => 'setLanguages',
        'keywords' => 'setKeywords',
        'menus_label' => 'setMenusLabel',
        'menu_ids' => 'setMenuIds',
        'bio_lists_label' => 'setBioListsLabel',
        'bio_list_ids' => 'setBioListIds',
        'product_lists_label' => 'setProductListsLabel',
        'product_list_ids' => 'setProductListIds',
        'event_lists_label' => 'setEventListsLabel',
        'event_list_ids' => 'setEventListIds',
        'folder_id' => 'setFolderId',
        'label_ids' => 'setLabelIds',
        'custom_fields' => 'setCustomFields',
        'intelligent_search_tracking_enabled' => 'setIntelligentSearchTrackingEnabled',
        'intelligent_search_tracking_frequency' => 'setIntelligentSearchTrackingFrequency',
        'location_keywords' => 'setLocationKeywords',
        'custom_keywords' => 'setCustomKeywords',
        'query_templates' => 'setQueryTemplates',
        'alternate_names' => 'setAlternateNames',
        'alternate_websites' => 'setAlternateWebsites',
        'competitors' => 'setCompetitors',
        'tracking_sites' => 'setTrackingSites',
        'is_cluster_primary' => 'setIsClusterPrimary',
        'attire' => 'setAttire',
        'price_range' => 'setPriceRange',
        'meals_served' => 'setMealsServed',
        'located_in' => 'setLocatedIn',
        'primary_contact' => 'setPrimaryContact',
        'review_response_conversation_enabled' => 'setReviewResponseConversationEnabled',
        'holiday_hours_confirmation_enabled' => 'setHolidayHoursConfirmationEnabled'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'account_id' => 'getAccountId',
        'location_type' => 'getLocationType',
        'location_name' => 'getLocationName',
        'first_name' => 'getFirstName',
        'middle_name' => 'getMiddleName',
        'last_name' => 'getLastName',
        'office_name' => 'getOfficeName',
        'gender' => 'getGender',
        'npi' => 'getNpi',
        'address' => 'getAddress',
        'address2' => 'getAddress2',
        'suppress_address' => 'getSuppressAddress',
        'display_address' => 'getDisplayAddress',
        'city' => 'getCity',
        'state' => 'getState',
        'sublocality' => 'getSublocality',
        'zip' => 'getZip',
        'country_code' => 'getCountryCode',
        'service_area' => 'getServiceArea',
        'phone' => 'getPhone',
        'is_phone_tracked' => 'getIsPhoneTracked',
        'local_phone' => 'getLocalPhone',
        'alternate_phone' => 'getAlternatePhone',
        'fax_phone' => 'getFaxPhone',
        'mobile_phone' => 'getMobilePhone',
        'toll_free_phone' => 'getTollFreePhone',
        'tty_phone' => 'getTtyPhone',
        'category_ids' => 'getCategoryIds',
        'featured_message' => 'getFeaturedMessage',
        'featured_message_url' => 'getFeaturedMessageUrl',
        'website_url' => 'getWebsiteUrl',
        'display_website_url' => 'getDisplayWebsiteUrl',
        'reservation_url' => 'getReservationUrl',
        'display_reservation_url' => 'getDisplayReservationUrl',
        'menu_url' => 'getMenuUrl',
        'display_menu_url' => 'getDisplayMenuUrl',
        'order_url' => 'getOrderUrl',
        'display_order_url' => 'getDisplayOrderUrl',
        'hours' => 'getHours',
        'additional_hours_text' => 'getAdditionalHoursText',
        'holiday_hours' => 'getHolidayHours',
        'description' => 'getDescription',
        'conditions_treated' => 'getConditionsTreated',
        'certifications' => 'getCertifications',
        'education_list' => 'getEducationList',
        'degrees' => 'getDegrees',
        'admitting_hospitals' => 'getAdmittingHospitals',
        'accepting_new_patients' => 'getAcceptingNewPatients',
        'closed' => 'getClosed',
        'payment_options' => 'getPaymentOptions',
        'insurance_accepted' => 'getInsuranceAccepted',
        'logo' => 'getLogo',
        'photos' => 'getPhotos',
        'headshot' => 'getHeadshot',
        'video_urls' => 'getVideoUrls',
        'instagram_handle' => 'getInstagramHandle',
        'twitter_handle' => 'getTwitterHandle',
        'google_website_override' => 'getGoogleWebsiteOverride',
        'google_cover_photo' => 'getGoogleCoverPhoto',
        'google_profile_photo' => 'getGoogleProfilePhoto',
        'google_preferred_photo' => 'getGooglePreferredPhoto',
        'google_attributes' => 'getGoogleAttributes',
        'facebook_page_url' => 'getFacebookPageUrl',
        'facebook_cover_photo' => 'getFacebookCoverPhoto',
        'facebook_profile_picture' => 'getFacebookProfilePicture',
        'uber_link_type' => 'getUberLinkType',
        'uber_link_text' => 'getUberLinkText',
        'uber_trip_branding_text' => 'getUberTripBrandingText',
        'uber_trip_branding_url' => 'getUberTripBrandingUrl',
        'uber_trip_branding_description' => 'getUberTripBrandingDescription',
        'uber_client_id' => 'getUberClientId',
        'year_established' => 'getYearEstablished',
        'display_lat' => 'getDisplayLat',
        'display_lng' => 'getDisplayLng',
        'routable_lat' => 'getRoutableLat',
        'routable_lng' => 'getRoutableLng',
        'walkable_lat' => 'getWalkableLat',
        'walkable_lng' => 'getWalkableLng',
        'pickup_lat' => 'getPickupLat',
        'pickup_lng' => 'getPickupLng',
        'dropoff_lat' => 'getDropoffLat',
        'dropoff_lng' => 'getDropoffLng',
        'emails' => 'getEmails',
        'specialties' => 'getSpecialties',
        'associations' => 'getAssociations',
        'products' => 'getProducts',
        'services' => 'getServices',
        'brands' => 'getBrands',
        'language' => 'getLanguage',
        'languages' => 'getLanguages',
        'keywords' => 'getKeywords',
        'menus_label' => 'getMenusLabel',
        'menu_ids' => 'getMenuIds',
        'bio_lists_label' => 'getBioListsLabel',
        'bio_list_ids' => 'getBioListIds',
        'product_lists_label' => 'getProductListsLabel',
        'product_list_ids' => 'getProductListIds',
        'event_lists_label' => 'getEventListsLabel',
        'event_list_ids' => 'getEventListIds',
        'folder_id' => 'getFolderId',
        'label_ids' => 'getLabelIds',
        'custom_fields' => 'getCustomFields',
        'intelligent_search_tracking_enabled' => 'getIntelligentSearchTrackingEnabled',
        'intelligent_search_tracking_frequency' => 'getIntelligentSearchTrackingFrequency',
        'location_keywords' => 'getLocationKeywords',
        'custom_keywords' => 'getCustomKeywords',
        'query_templates' => 'getQueryTemplates',
        'alternate_names' => 'getAlternateNames',
        'alternate_websites' => 'getAlternateWebsites',
        'competitors' => 'getCompetitors',
        'tracking_sites' => 'getTrackingSites',
        'is_cluster_primary' => 'getIsClusterPrimary',
        'attire' => 'getAttire',
        'price_range' => 'getPriceRange',
        'meals_served' => 'getMealsServed',
        'located_in' => 'getLocatedIn',
        'primary_contact' => 'getPrimaryContact',
        'review_response_conversation_enabled' => 'getReviewResponseConversationEnabled',
        'holiday_hours_confirmation_enabled' => 'getHolidayHoursConfirmationEnabled'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['account_id'] = isset($data['account_id']) ? $data['account_id'] : null;
        $this->container['location_type'] = isset($data['location_type']) ? $data['location_type'] : null;
        $this->container['location_name'] = isset($data['location_name']) ? $data['location_name'] : null;
        $this->container['first_name'] = isset($data['first_name']) ? $data['first_name'] : null;
        $this->container['middle_name'] = isset($data['middle_name']) ? $data['middle_name'] : null;
        $this->container['last_name'] = isset($data['last_name']) ? $data['last_name'] : null;
        $this->container['office_name'] = isset($data['office_name']) ? $data['office_name'] : null;
        $this->container['gender'] = isset($data['gender']) ? $data['gender'] : null;
        $this->container['npi'] = isset($data['npi']) ? $data['npi'] : null;
        $this->container['address'] = isset($data['address']) ? $data['address'] : null;
        $this->container['address2'] = isset($data['address2']) ? $data['address2'] : null;
        $this->container['suppress_address'] = isset($data['suppress_address']) ? $data['suppress_address'] : null;
        $this->container['display_address'] = isset($data['display_address']) ? $data['display_address'] : null;
        $this->container['city'] = isset($data['city']) ? $data['city'] : null;
        $this->container['state'] = isset($data['state']) ? $data['state'] : null;
        $this->container['sublocality'] = isset($data['sublocality']) ? $data['sublocality'] : null;
        $this->container['zip'] = isset($data['zip']) ? $data['zip'] : null;
        $this->container['country_code'] = isset($data['country_code']) ? $data['country_code'] : null;
        $this->container['service_area'] = isset($data['service_area']) ? $data['service_area'] : null;
        $this->container['phone'] = isset($data['phone']) ? $data['phone'] : null;
        $this->container['is_phone_tracked'] = isset($data['is_phone_tracked']) ? $data['is_phone_tracked'] : null;
        $this->container['local_phone'] = isset($data['local_phone']) ? $data['local_phone'] : null;
        $this->container['alternate_phone'] = isset($data['alternate_phone']) ? $data['alternate_phone'] : null;
        $this->container['fax_phone'] = isset($data['fax_phone']) ? $data['fax_phone'] : null;
        $this->container['mobile_phone'] = isset($data['mobile_phone']) ? $data['mobile_phone'] : null;
        $this->container['toll_free_phone'] = isset($data['toll_free_phone']) ? $data['toll_free_phone'] : null;
        $this->container['tty_phone'] = isset($data['tty_phone']) ? $data['tty_phone'] : null;
        $this->container['category_ids'] = isset($data['category_ids']) ? $data['category_ids'] : null;
        $this->container['featured_message'] = isset($data['featured_message']) ? $data['featured_message'] : null;
        $this->container['featured_message_url'] = isset($data['featured_message_url']) ? $data['featured_message_url'] : null;
        $this->container['website_url'] = isset($data['website_url']) ? $data['website_url'] : null;
        $this->container['display_website_url'] = isset($data['display_website_url']) ? $data['display_website_url'] : null;
        $this->container['reservation_url'] = isset($data['reservation_url']) ? $data['reservation_url'] : null;
        $this->container['display_reservation_url'] = isset($data['display_reservation_url']) ? $data['display_reservation_url'] : null;
        $this->container['menu_url'] = isset($data['menu_url']) ? $data['menu_url'] : null;
        $this->container['display_menu_url'] = isset($data['display_menu_url']) ? $data['display_menu_url'] : null;
        $this->container['order_url'] = isset($data['order_url']) ? $data['order_url'] : null;
        $this->container['display_order_url'] = isset($data['display_order_url']) ? $data['display_order_url'] : null;
        $this->container['hours'] = isset($data['hours']) ? $data['hours'] : null;
        $this->container['additional_hours_text'] = isset($data['additional_hours_text']) ? $data['additional_hours_text'] : null;
        $this->container['holiday_hours'] = isset($data['holiday_hours']) ? $data['holiday_hours'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['conditions_treated'] = isset($data['conditions_treated']) ? $data['conditions_treated'] : null;
        $this->container['certifications'] = isset($data['certifications']) ? $data['certifications'] : null;
        $this->container['education_list'] = isset($data['education_list']) ? $data['education_list'] : null;
        $this->container['degrees'] = isset($data['degrees']) ? $data['degrees'] : null;
        $this->container['admitting_hospitals'] = isset($data['admitting_hospitals']) ? $data['admitting_hospitals'] : null;
        $this->container['accepting_new_patients'] = isset($data['accepting_new_patients']) ? $data['accepting_new_patients'] : null;
        $this->container['closed'] = isset($data['closed']) ? $data['closed'] : null;
        $this->container['payment_options'] = isset($data['payment_options']) ? $data['payment_options'] : null;
        $this->container['insurance_accepted'] = isset($data['insurance_accepted']) ? $data['insurance_accepted'] : null;
        $this->container['logo'] = isset($data['logo']) ? $data['logo'] : null;
        $this->container['photos'] = isset($data['photos']) ? $data['photos'] : null;
        $this->container['headshot'] = isset($data['headshot']) ? $data['headshot'] : null;
        $this->container['video_urls'] = isset($data['video_urls']) ? $data['video_urls'] : null;
        $this->container['instagram_handle'] = isset($data['instagram_handle']) ? $data['instagram_handle'] : null;
        $this->container['twitter_handle'] = isset($data['twitter_handle']) ? $data['twitter_handle'] : null;
        $this->container['google_website_override'] = isset($data['google_website_override']) ? $data['google_website_override'] : null;
        $this->container['google_cover_photo'] = isset($data['google_cover_photo']) ? $data['google_cover_photo'] : null;
        $this->container['google_profile_photo'] = isset($data['google_profile_photo']) ? $data['google_profile_photo'] : null;
        $this->container['google_preferred_photo'] = isset($data['google_preferred_photo']) ? $data['google_preferred_photo'] : null;
        $this->container['google_attributes'] = isset($data['google_attributes']) ? $data['google_attributes'] : null;
        $this->container['facebook_page_url'] = isset($data['facebook_page_url']) ? $data['facebook_page_url'] : null;
        $this->container['facebook_cover_photo'] = isset($data['facebook_cover_photo']) ? $data['facebook_cover_photo'] : null;
        $this->container['facebook_profile_picture'] = isset($data['facebook_profile_picture']) ? $data['facebook_profile_picture'] : null;
        $this->container['uber_link_type'] = isset($data['uber_link_type']) ? $data['uber_link_type'] : null;
        $this->container['uber_link_text'] = isset($data['uber_link_text']) ? $data['uber_link_text'] : null;
        $this->container['uber_trip_branding_text'] = isset($data['uber_trip_branding_text']) ? $data['uber_trip_branding_text'] : null;
        $this->container['uber_trip_branding_url'] = isset($data['uber_trip_branding_url']) ? $data['uber_trip_branding_url'] : null;
        $this->container['uber_trip_branding_description'] = isset($data['uber_trip_branding_description']) ? $data['uber_trip_branding_description'] : null;
        $this->container['uber_client_id'] = isset($data['uber_client_id']) ? $data['uber_client_id'] : null;
        $this->container['year_established'] = isset($data['year_established']) ? $data['year_established'] : null;
        $this->container['display_lat'] = isset($data['display_lat']) ? $data['display_lat'] : null;
        $this->container['display_lng'] = isset($data['display_lng']) ? $data['display_lng'] : null;
        $this->container['routable_lat'] = isset($data['routable_lat']) ? $data['routable_lat'] : null;
        $this->container['routable_lng'] = isset($data['routable_lng']) ? $data['routable_lng'] : null;
        $this->container['walkable_lat'] = isset($data['walkable_lat']) ? $data['walkable_lat'] : null;
        $this->container['walkable_lng'] = isset($data['walkable_lng']) ? $data['walkable_lng'] : null;
        $this->container['pickup_lat'] = isset($data['pickup_lat']) ? $data['pickup_lat'] : null;
        $this->container['pickup_lng'] = isset($data['pickup_lng']) ? $data['pickup_lng'] : null;
        $this->container['dropoff_lat'] = isset($data['dropoff_lat']) ? $data['dropoff_lat'] : null;
        $this->container['dropoff_lng'] = isset($data['dropoff_lng']) ? $data['dropoff_lng'] : null;
        $this->container['emails'] = isset($data['emails']) ? $data['emails'] : null;
        $this->container['specialties'] = isset($data['specialties']) ? $data['specialties'] : null;
        $this->container['associations'] = isset($data['associations']) ? $data['associations'] : null;
        $this->container['products'] = isset($data['products']) ? $data['products'] : null;
        $this->container['services'] = isset($data['services']) ? $data['services'] : null;
        $this->container['brands'] = isset($data['brands']) ? $data['brands'] : null;
        $this->container['language'] = isset($data['language']) ? $data['language'] : null;
        $this->container['languages'] = isset($data['languages']) ? $data['languages'] : null;
        $this->container['keywords'] = isset($data['keywords']) ? $data['keywords'] : null;
        $this->container['menus_label'] = isset($data['menus_label']) ? $data['menus_label'] : null;
        $this->container['menu_ids'] = isset($data['menu_ids']) ? $data['menu_ids'] : null;
        $this->container['bio_lists_label'] = isset($data['bio_lists_label']) ? $data['bio_lists_label'] : null;
        $this->container['bio_list_ids'] = isset($data['bio_list_ids']) ? $data['bio_list_ids'] : null;
        $this->container['product_lists_label'] = isset($data['product_lists_label']) ? $data['product_lists_label'] : null;
        $this->container['product_list_ids'] = isset($data['product_list_ids']) ? $data['product_list_ids'] : null;
        $this->container['event_lists_label'] = isset($data['event_lists_label']) ? $data['event_lists_label'] : null;
        $this->container['event_list_ids'] = isset($data['event_list_ids']) ? $data['event_list_ids'] : null;
        $this->container['folder_id'] = isset($data['folder_id']) ? $data['folder_id'] : null;
        $this->container['label_ids'] = isset($data['label_ids']) ? $data['label_ids'] : null;
        $this->container['custom_fields'] = isset($data['custom_fields']) ? $data['custom_fields'] : null;
        $this->container['intelligent_search_tracking_enabled'] = isset($data['intelligent_search_tracking_enabled']) ? $data['intelligent_search_tracking_enabled'] : null;
        $this->container['intelligent_search_tracking_frequency'] = isset($data['intelligent_search_tracking_frequency']) ? $data['intelligent_search_tracking_frequency'] : null;
        $this->container['location_keywords'] = isset($data['location_keywords']) ? $data['location_keywords'] : null;
        $this->container['custom_keywords'] = isset($data['custom_keywords']) ? $data['custom_keywords'] : null;
        $this->container['query_templates'] = isset($data['query_templates']) ? $data['query_templates'] : null;
        $this->container['alternate_names'] = isset($data['alternate_names']) ? $data['alternate_names'] : null;
        $this->container['alternate_websites'] = isset($data['alternate_websites']) ? $data['alternate_websites'] : null;
        $this->container['competitors'] = isset($data['competitors']) ? $data['competitors'] : null;
        $this->container['tracking_sites'] = isset($data['tracking_sites']) ? $data['tracking_sites'] : null;
        $this->container['is_cluster_primary'] = isset($data['is_cluster_primary']) ? $data['is_cluster_primary'] : null;
        $this->container['attire'] = isset($data['attire']) ? $data['attire'] : null;
        $this->container['price_range'] = isset($data['price_range']) ? $data['price_range'] : null;
        $this->container['meals_served'] = isset($data['meals_served']) ? $data['meals_served'] : null;
        $this->container['located_in'] = isset($data['located_in']) ? $data['located_in'] : null;
        $this->container['primary_contact'] = isset($data['primary_contact']) ? $data['primary_contact'] : null;
        $this->container['review_response_conversation_enabled'] = isset($data['review_response_conversation_enabled']) ? $data['review_response_conversation_enabled'] : null;
        $this->container['holiday_hours_confirmation_enabled'] = isset($data['holiday_hours_confirmation_enabled']) ? $data['holiday_hours_confirmation_enabled'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['id'] === null) {
            $invalidProperties[] = "'id' can't be null";
        }
        if ($this->container['account_id'] === null) {
            $invalidProperties[] = "'account_id' can't be null";
        }
        if ($this->container['location_type'] === null) {
            $invalidProperties[] = "'location_type' can't be null";
        }
        if ($this->container['location_name'] === null) {
            $invalidProperties[] = "'location_name' can't be null";
        }
        if ($this->container['first_name'] === null) {
            $invalidProperties[] = "'first_name' can't be null";
        }
        if ($this->container['middle_name'] === null) {
            $invalidProperties[] = "'middle_name' can't be null";
        }
        if ($this->container['last_name'] === null) {
            $invalidProperties[] = "'last_name' can't be null";
        }
        if ($this->container['office_name'] === null) {
            $invalidProperties[] = "'office_name' can't be null";
        }
        if ($this->container['gender'] === null) {
            $invalidProperties[] = "'gender' can't be null";
        }
        if ($this->container['npi'] === null) {
            $invalidProperties[] = "'npi' can't be null";
        }
        if ($this->container['address'] === null) {
            $invalidProperties[] = "'address' can't be null";
        }
        if ($this->container['address2'] === null) {
            $invalidProperties[] = "'address2' can't be null";
        }
        if ($this->container['suppress_address'] === null) {
            $invalidProperties[] = "'suppress_address' can't be null";
        }
        if ($this->container['display_address'] === null) {
            $invalidProperties[] = "'display_address' can't be null";
        }
        if ($this->container['city'] === null) {
            $invalidProperties[] = "'city' can't be null";
        }
        if ($this->container['state'] === null) {
            $invalidProperties[] = "'state' can't be null";
        }
        if ($this->container['sublocality'] === null) {
            $invalidProperties[] = "'sublocality' can't be null";
        }
        if ($this->container['zip'] === null) {
            $invalidProperties[] = "'zip' can't be null";
        }
        if ($this->container['country_code'] === null) {
            $invalidProperties[] = "'country_code' can't be null";
        }
        if ($this->container['service_area'] === null) {
            $invalidProperties[] = "'service_area' can't be null";
        }
        if ($this->container['phone'] === null) {
            $invalidProperties[] = "'phone' can't be null";
        }
        if ($this->container['is_phone_tracked'] === null) {
            $invalidProperties[] = "'is_phone_tracked' can't be null";
        }
        if ($this->container['local_phone'] === null) {
            $invalidProperties[] = "'local_phone' can't be null";
        }
        if ($this->container['alternate_phone'] === null) {
            $invalidProperties[] = "'alternate_phone' can't be null";
        }
        if ($this->container['fax_phone'] === null) {
            $invalidProperties[] = "'fax_phone' can't be null";
        }
        if ($this->container['mobile_phone'] === null) {
            $invalidProperties[] = "'mobile_phone' can't be null";
        }
        if ($this->container['toll_free_phone'] === null) {
            $invalidProperties[] = "'toll_free_phone' can't be null";
        }
        if ($this->container['tty_phone'] === null) {
            $invalidProperties[] = "'tty_phone' can't be null";
        }
        if ($this->container['category_ids'] === null) {
            $invalidProperties[] = "'category_ids' can't be null";
        }
        if ($this->container['featured_message'] === null) {
            $invalidProperties[] = "'featured_message' can't be null";
        }
        if ($this->container['featured_message_url'] === null) {
            $invalidProperties[] = "'featured_message_url' can't be null";
        }
        if ($this->container['website_url'] === null) {
            $invalidProperties[] = "'website_url' can't be null";
        }
        if ($this->container['display_website_url'] === null) {
            $invalidProperties[] = "'display_website_url' can't be null";
        }
        if ($this->container['reservation_url'] === null) {
            $invalidProperties[] = "'reservation_url' can't be null";
        }
        if ($this->container['display_reservation_url'] === null) {
            $invalidProperties[] = "'display_reservation_url' can't be null";
        }
        if ($this->container['menu_url'] === null) {
            $invalidProperties[] = "'menu_url' can't be null";
        }
        if ($this->container['display_menu_url'] === null) {
            $invalidProperties[] = "'display_menu_url' can't be null";
        }
        if ($this->container['order_url'] === null) {
            $invalidProperties[] = "'order_url' can't be null";
        }
        if ($this->container['display_order_url'] === null) {
            $invalidProperties[] = "'display_order_url' can't be null";
        }
        if ($this->container['hours'] === null) {
            $invalidProperties[] = "'hours' can't be null";
        }
        if ($this->container['additional_hours_text'] === null) {
            $invalidProperties[] = "'additional_hours_text' can't be null";
        }
        if ($this->container['holiday_hours'] === null) {
            $invalidProperties[] = "'holiday_hours' can't be null";
        }
        if ($this->container['description'] === null) {
            $invalidProperties[] = "'description' can't be null";
        }
        if ($this->container['conditions_treated'] === null) {
            $invalidProperties[] = "'conditions_treated' can't be null";
        }
        if ($this->container['certifications'] === null) {
            $invalidProperties[] = "'certifications' can't be null";
        }
        if ($this->container['education_list'] === null) {
            $invalidProperties[] = "'education_list' can't be null";
        }
        if ($this->container['degrees'] === null) {
            $invalidProperties[] = "'degrees' can't be null";
        }
        if ($this->container['admitting_hospitals'] === null) {
            $invalidProperties[] = "'admitting_hospitals' can't be null";
        }
        if ($this->container['accepting_new_patients'] === null) {
            $invalidProperties[] = "'accepting_new_patients' can't be null";
        }
        if ($this->container['closed'] === null) {
            $invalidProperties[] = "'closed' can't be null";
        }
        if ($this->container['payment_options'] === null) {
            $invalidProperties[] = "'payment_options' can't be null";
        }
        if ($this->container['insurance_accepted'] === null) {
            $invalidProperties[] = "'insurance_accepted' can't be null";
        }
        if ($this->container['logo'] === null) {
            $invalidProperties[] = "'logo' can't be null";
        }
        if ($this->container['photos'] === null) {
            $invalidProperties[] = "'photos' can't be null";
        }
        if ($this->container['headshot'] === null) {
            $invalidProperties[] = "'headshot' can't be null";
        }
        if ($this->container['video_urls'] === null) {
            $invalidProperties[] = "'video_urls' can't be null";
        }
        if ($this->container['instagram_handle'] === null) {
            $invalidProperties[] = "'instagram_handle' can't be null";
        }
        if ($this->container['twitter_handle'] === null) {
            $invalidProperties[] = "'twitter_handle' can't be null";
        }
        if ($this->container['google_website_override'] === null) {
            $invalidProperties[] = "'google_website_override' can't be null";
        }
        if ($this->container['google_cover_photo'] === null) {
            $invalidProperties[] = "'google_cover_photo' can't be null";
        }
        if ($this->container['google_profile_photo'] === null) {
            $invalidProperties[] = "'google_profile_photo' can't be null";
        }
        if ($this->container['google_preferred_photo'] === null) {
            $invalidProperties[] = "'google_preferred_photo' can't be null";
        }
        if ($this->container['google_attributes'] === null) {
            $invalidProperties[] = "'google_attributes' can't be null";
        }
        if ($this->container['facebook_page_url'] === null) {
            $invalidProperties[] = "'facebook_page_url' can't be null";
        }
        if ($this->container['facebook_cover_photo'] === null) {
            $invalidProperties[] = "'facebook_cover_photo' can't be null";
        }
        if ($this->container['facebook_profile_picture'] === null) {
            $invalidProperties[] = "'facebook_profile_picture' can't be null";
        }
        if ($this->container['uber_link_type'] === null) {
            $invalidProperties[] = "'uber_link_type' can't be null";
        }
        if ($this->container['uber_link_text'] === null) {
            $invalidProperties[] = "'uber_link_text' can't be null";
        }
        if ($this->container['uber_trip_branding_text'] === null) {
            $invalidProperties[] = "'uber_trip_branding_text' can't be null";
        }
        if ($this->container['uber_trip_branding_url'] === null) {
            $invalidProperties[] = "'uber_trip_branding_url' can't be null";
        }
        if ($this->container['uber_trip_branding_description'] === null) {
            $invalidProperties[] = "'uber_trip_branding_description' can't be null";
        }
        if ($this->container['uber_client_id'] === null) {
            $invalidProperties[] = "'uber_client_id' can't be null";
        }
        if ($this->container['year_established'] === null) {
            $invalidProperties[] = "'year_established' can't be null";
        }
        if ($this->container['display_lat'] === null) {
            $invalidProperties[] = "'display_lat' can't be null";
        }
        if ($this->container['display_lng'] === null) {
            $invalidProperties[] = "'display_lng' can't be null";
        }
        if ($this->container['routable_lat'] === null) {
            $invalidProperties[] = "'routable_lat' can't be null";
        }
        if ($this->container['routable_lng'] === null) {
            $invalidProperties[] = "'routable_lng' can't be null";
        }
        if ($this->container['walkable_lat'] === null) {
            $invalidProperties[] = "'walkable_lat' can't be null";
        }
        if ($this->container['walkable_lng'] === null) {
            $invalidProperties[] = "'walkable_lng' can't be null";
        }
        if ($this->container['pickup_lat'] === null) {
            $invalidProperties[] = "'pickup_lat' can't be null";
        }
        if ($this->container['pickup_lng'] === null) {
            $invalidProperties[] = "'pickup_lng' can't be null";
        }
        if ($this->container['dropoff_lat'] === null) {
            $invalidProperties[] = "'dropoff_lat' can't be null";
        }
        if ($this->container['dropoff_lng'] === null) {
            $invalidProperties[] = "'dropoff_lng' can't be null";
        }
        if ($this->container['emails'] === null) {
            $invalidProperties[] = "'emails' can't be null";
        }
        if ($this->container['specialties'] === null) {
            $invalidProperties[] = "'specialties' can't be null";
        }
        if ($this->container['associations'] === null) {
            $invalidProperties[] = "'associations' can't be null";
        }
        if ($this->container['products'] === null) {
            $invalidProperties[] = "'products' can't be null";
        }
        if ($this->container['services'] === null) {
            $invalidProperties[] = "'services' can't be null";
        }
        if ($this->container['brands'] === null) {
            $invalidProperties[] = "'brands' can't be null";
        }
        if ($this->container['language'] === null) {
            $invalidProperties[] = "'language' can't be null";
        }
        if ($this->container['languages'] === null) {
            $invalidProperties[] = "'languages' can't be null";
        }
        if ($this->container['keywords'] === null) {
            $invalidProperties[] = "'keywords' can't be null";
        }
        if ($this->container['menus_label'] === null) {
            $invalidProperties[] = "'menus_label' can't be null";
        }
        if ($this->container['menu_ids'] === null) {
            $invalidProperties[] = "'menu_ids' can't be null";
        }
        if ($this->container['bio_lists_label'] === null) {
            $invalidProperties[] = "'bio_lists_label' can't be null";
        }
        if ($this->container['bio_list_ids'] === null) {
            $invalidProperties[] = "'bio_list_ids' can't be null";
        }
        if ($this->container['product_lists_label'] === null) {
            $invalidProperties[] = "'product_lists_label' can't be null";
        }
        if ($this->container['product_list_ids'] === null) {
            $invalidProperties[] = "'product_list_ids' can't be null";
        }
        if ($this->container['event_lists_label'] === null) {
            $invalidProperties[] = "'event_lists_label' can't be null";
        }
        if ($this->container['event_list_ids'] === null) {
            $invalidProperties[] = "'event_list_ids' can't be null";
        }
        if ($this->container['folder_id'] === null) {
            $invalidProperties[] = "'folder_id' can't be null";
        }
        if ($this->container['label_ids'] === null) {
            $invalidProperties[] = "'label_ids' can't be null";
        }
        if ($this->container['custom_fields'] === null) {
            $invalidProperties[] = "'custom_fields' can't be null";
        }
        if ($this->container['intelligent_search_tracking_enabled'] === null) {
            $invalidProperties[] = "'intelligent_search_tracking_enabled' can't be null";
        }
        if ($this->container['intelligent_search_tracking_frequency'] === null) {
            $invalidProperties[] = "'intelligent_search_tracking_frequency' can't be null";
        }
        if ($this->container['location_keywords'] === null) {
            $invalidProperties[] = "'location_keywords' can't be null";
        }
        if ($this->container['custom_keywords'] === null) {
            $invalidProperties[] = "'custom_keywords' can't be null";
        }
        if ($this->container['query_templates'] === null) {
            $invalidProperties[] = "'query_templates' can't be null";
        }
        if ($this->container['alternate_names'] === null) {
            $invalidProperties[] = "'alternate_names' can't be null";
        }
        if ($this->container['alternate_websites'] === null) {
            $invalidProperties[] = "'alternate_websites' can't be null";
        }
        if ($this->container['competitors'] === null) {
            $invalidProperties[] = "'competitors' can't be null";
        }
        if ($this->container['tracking_sites'] === null) {
            $invalidProperties[] = "'tracking_sites' can't be null";
        }
        if ($this->container['is_cluster_primary'] === null) {
            $invalidProperties[] = "'is_cluster_primary' can't be null";
        }
        if ($this->container['attire'] === null) {
            $invalidProperties[] = "'attire' can't be null";
        }
        if ($this->container['price_range'] === null) {
            $invalidProperties[] = "'price_range' can't be null";
        }
        if ($this->container['meals_served'] === null) {
            $invalidProperties[] = "'meals_served' can't be null";
        }
        if ($this->container['located_in'] === null) {
            $invalidProperties[] = "'located_in' can't be null";
        }
        if ($this->container['primary_contact'] === null) {
            $invalidProperties[] = "'primary_contact' can't be null";
        }
        if ($this->container['review_response_conversation_enabled'] === null) {
            $invalidProperties[] = "'review_response_conversation_enabled' can't be null";
        }
        if ($this->container['holiday_hours_confirmation_enabled'] === null) {
            $invalidProperties[] = "'holiday_hours_confirmation_enabled' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return string
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param string $id id
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets account_id
     *
     * @return string
     */
    public function getAccountId()
    {
        return $this->container['account_id'];
    }

    /**
     * Sets account_id
     *
     * @param string $account_id account_id
     *
     * @return $this
     */
    public function setAccountId($account_id)
    {
        $this->container['account_id'] = $account_id;

        return $this;
    }

    /**
     * Gets location_type
     *
     * @return string
     */
    public function getLocationType()
    {
        return $this->container['location_type'];
    }

    /**
     * Sets location_type
     *
     * @param string $location_type location_type
     *
     * @return $this
     */
    public function setLocationType($location_type)
    {
        $this->container['location_type'] = $location_type;

        return $this;
    }

    /**
     * Gets location_name
     *
     * @return string
     */
    public function getLocationName()
    {
        return $this->container['location_name'];
    }

    /**
     * Sets location_name
     *
     * @param string $location_name location_name
     *
     * @return $this
     */
    public function setLocationName($location_name)
    {
        $this->container['location_name'] = $location_name;

        return $this;
    }

    /**
     * Gets first_name
     *
     * @return string
     */
    public function getFirstName()
    {
        return $this->container['first_name'];
    }

    /**
     * Sets first_name
     *
     * @param string $first_name first_name
     *
     * @return $this
     */
    public function setFirstName($first_name)
    {
        $this->container['first_name'] = $first_name;

        return $this;
    }

    /**
     * Gets middle_name
     *
     * @return string
     */
    public function getMiddleName()
    {
        return $this->container['middle_name'];
    }

    /**
     * Sets middle_name
     *
     * @param string $middle_name middle_name
     *
     * @return $this
     */
    public function setMiddleName($middle_name)
    {
        $this->container['middle_name'] = $middle_name;

        return $this;
    }

    /**
     * Gets last_name
     *
     * @return string
     */
    public function getLastName()
    {
        return $this->container['last_name'];
    }

    /**
     * Sets last_name
     *
     * @param string $last_name last_name
     *
     * @return $this
     */
    public function setLastName($last_name)
    {
        $this->container['last_name'] = $last_name;

        return $this;
    }

    /**
     * Gets office_name
     *
     * @return string
     */
    public function getOfficeName()
    {
        return $this->container['office_name'];
    }

    /**
     * Sets office_name
     *
     * @param string $office_name office_name
     *
     * @return $this
     */
    public function setOfficeName($office_name)
    {
        $this->container['office_name'] = $office_name;

        return $this;
    }

    /**
     * Gets gender
     *
     * @return string
     */
    public function getGender()
    {
        return $this->container['gender'];
    }

    /**
     * Sets gender
     *
     * @param string $gender gender
     *
     * @return $this
     */
    public function setGender($gender)
    {
        $this->container['gender'] = $gender;

        return $this;
    }

    /**
     * Gets npi
     *
     * @return string
     */
    public function getNpi()
    {
        return $this->container['npi'];
    }

    /**
     * Sets npi
     *
     * @param string $npi npi
     *
     * @return $this
     */
    public function setNpi($npi)
    {
        $this->container['npi'] = $npi;

        return $this;
    }

    /**
     * Gets address
     *
     * @return string
     */
    public function getAddress()
    {
        return $this->container['address'];
    }

    /**
     * Sets address
     *
     * @param string $address address
     *
     * @return $this
     */
    public function setAddress($address)
    {
        $this->container['address'] = $address;

        return $this;
    }

    /**
     * Gets address2
     *
     * @return string
     */
    public function getAddress2()
    {
        return $this->container['address2'];
    }

    /**
     * Sets address2
     *
     * @param string $address2 address2
     *
     * @return $this
     */
    public function setAddress2($address2)
    {
        $this->container['address2'] = $address2;

        return $this;
    }

    /**
     * Gets suppress_address
     *
     * @return bool
     */
    public function getSuppressAddress()
    {
        return $this->container['suppress_address'];
    }

    /**
     * Sets suppress_address
     *
     * @param bool $suppress_address suppress_address
     *
     * @return $this
     */
    public function setSuppressAddress($suppress_address)
    {
        $this->container['suppress_address'] = $suppress_address;

        return $this;
    }

    /**
     * Gets display_address
     *
     * @return string
     */
    public function getDisplayAddress()
    {
        return $this->container['display_address'];
    }

    /**
     * Sets display_address
     *
     * @param string $display_address display_address
     *
     * @return $this
     */
    public function setDisplayAddress($display_address)
    {
        $this->container['display_address'] = $display_address;

        return $this;
    }

    /**
     * Gets city
     *
     * @return string
     */
    public function getCity()
    {
        return $this->container['city'];
    }

    /**
     * Sets city
     *
     * @param string $city city
     *
     * @return $this
     */
    public function setCity($city)
    {
        $this->container['city'] = $city;

        return $this;
    }

    /**
     * Gets state
     *
     * @return string
     */
    public function getState()
    {
        return $this->container['state'];
    }

    /**
     * Sets state
     *
     * @param string $state state
     *
     * @return $this
     */
    public function setState($state)
    {
        $this->container['state'] = $state;

        return $this;
    }

    /**
     * Gets sublocality
     *
     * @return string
     */
    public function getSublocality()
    {
        return $this->container['sublocality'];
    }

    /**
     * Sets sublocality
     *
     * @param string $sublocality sublocality
     *
     * @return $this
     */
    public function setSublocality($sublocality)
    {
        $this->container['sublocality'] = $sublocality;

        return $this;
    }

    /**
     * Gets zip
     *
     * @return string
     */
    public function getZip()
    {
        return $this->container['zip'];
    }

    /**
     * Sets zip
     *
     * @param string $zip zip
     *
     * @return $this
     */
    public function setZip($zip)
    {
        $this->container['zip'] = $zip;

        return $this;
    }

    /**
     * Gets country_code
     *
     * @return string
     */
    public function getCountryCode()
    {
        return $this->container['country_code'];
    }

    /**
     * Sets country_code
     *
     * @param string $country_code country_code
     *
     * @return $this
     */
    public function setCountryCode($country_code)
    {
        $this->container['country_code'] = $country_code;

        return $this;
    }

    /**
     * Gets service_area
     *
     * @return \Swagger\Client\Model\ServiceArea8
     */
    public function getServiceArea()
    {
        return $this->container['service_area'];
    }

    /**
     * Sets service_area
     *
     * @param \Swagger\Client\Model\ServiceArea8 $service_area service_area
     *
     * @return $this
     */
    public function setServiceArea($service_area)
    {
        $this->container['service_area'] = $service_area;

        return $this;
    }

    /**
     * Gets phone
     *
     * @return string
     */
    public function getPhone()
    {
        return $this->container['phone'];
    }

    /**
     * Sets phone
     *
     * @param string $phone phone
     *
     * @return $this
     */
    public function setPhone($phone)
    {
        $this->container['phone'] = $phone;

        return $this;
    }

    /**
     * Gets is_phone_tracked
     *
     * @return bool
     */
    public function getIsPhoneTracked()
    {
        return $this->container['is_phone_tracked'];
    }

    /**
     * Sets is_phone_tracked
     *
     * @param bool $is_phone_tracked is_phone_tracked
     *
     * @return $this
     */
    public function setIsPhoneTracked($is_phone_tracked)
    {
        $this->container['is_phone_tracked'] = $is_phone_tracked;

        return $this;
    }

    /**
     * Gets local_phone
     *
     * @return string
     */
    public function getLocalPhone()
    {
        return $this->container['local_phone'];
    }

    /**
     * Sets local_phone
     *
     * @param string $local_phone local_phone
     *
     * @return $this
     */
    public function setLocalPhone($local_phone)
    {
        $this->container['local_phone'] = $local_phone;

        return $this;
    }

    /**
     * Gets alternate_phone
     *
     * @return string
     */
    public function getAlternatePhone()
    {
        return $this->container['alternate_phone'];
    }

    /**
     * Sets alternate_phone
     *
     * @param string $alternate_phone alternate_phone
     *
     * @return $this
     */
    public function setAlternatePhone($alternate_phone)
    {
        $this->container['alternate_phone'] = $alternate_phone;

        return $this;
    }

    /**
     * Gets fax_phone
     *
     * @return string
     */
    public function getFaxPhone()
    {
        return $this->container['fax_phone'];
    }

    /**
     * Sets fax_phone
     *
     * @param string $fax_phone fax_phone
     *
     * @return $this
     */
    public function setFaxPhone($fax_phone)
    {
        $this->container['fax_phone'] = $fax_phone;

        return $this;
    }

    /**
     * Gets mobile_phone
     *
     * @return string
     */
    public function getMobilePhone()
    {
        return $this->container['mobile_phone'];
    }

    /**
     * Sets mobile_phone
     *
     * @param string $mobile_phone mobile_phone
     *
     * @return $this
     */
    public function setMobilePhone($mobile_phone)
    {
        $this->container['mobile_phone'] = $mobile_phone;

        return $this;
    }

    /**
     * Gets toll_free_phone
     *
     * @return string
     */
    public function getTollFreePhone()
    {
        return $this->container['toll_free_phone'];
    }

    /**
     * Sets toll_free_phone
     *
     * @param string $toll_free_phone toll_free_phone
     *
     * @return $this
     */
    public function setTollFreePhone($toll_free_phone)
    {
        $this->container['toll_free_phone'] = $toll_free_phone;

        return $this;
    }

    /**
     * Gets tty_phone
     *
     * @return string
     */
    public function getTtyPhone()
    {
        return $this->container['tty_phone'];
    }

    /**
     * Sets tty_phone
     *
     * @param string $tty_phone tty_phone
     *
     * @return $this
     */
    public function setTtyPhone($tty_phone)
    {
        $this->container['tty_phone'] = $tty_phone;

        return $this;
    }

    /**
     * Gets category_ids
     *
     * @return string[]
     */
    public function getCategoryIds()
    {
        return $this->container['category_ids'];
    }

    /**
     * Sets category_ids
     *
     * @param string[] $category_ids category_ids
     *
     * @return $this
     */
    public function setCategoryIds($category_ids)
    {
        $this->container['category_ids'] = $category_ids;

        return $this;
    }

    /**
     * Gets featured_message
     *
     * @return string
     */
    public function getFeaturedMessage()
    {
        return $this->container['featured_message'];
    }

    /**
     * Sets featured_message
     *
     * @param string $featured_message featured_message
     *
     * @return $this
     */
    public function setFeaturedMessage($featured_message)
    {
        $this->container['featured_message'] = $featured_message;

        return $this;
    }

    /**
     * Gets featured_message_url
     *
     * @return string
     */
    public function getFeaturedMessageUrl()
    {
        return $this->container['featured_message_url'];
    }

    /**
     * Sets featured_message_url
     *
     * @param string $featured_message_url featured_message_url
     *
     * @return $this
     */
    public function setFeaturedMessageUrl($featured_message_url)
    {
        $this->container['featured_message_url'] = $featured_message_url;

        return $this;
    }

    /**
     * Gets website_url
     *
     * @return string
     */
    public function getWebsiteUrl()
    {
        return $this->container['website_url'];
    }

    /**
     * Sets website_url
     *
     * @param string $website_url website_url
     *
     * @return $this
     */
    public function setWebsiteUrl($website_url)
    {
        $this->container['website_url'] = $website_url;

        return $this;
    }

    /**
     * Gets display_website_url
     *
     * @return string
     */
    public function getDisplayWebsiteUrl()
    {
        return $this->container['display_website_url'];
    }

    /**
     * Sets display_website_url
     *
     * @param string $display_website_url display_website_url
     *
     * @return $this
     */
    public function setDisplayWebsiteUrl($display_website_url)
    {
        $this->container['display_website_url'] = $display_website_url;

        return $this;
    }

    /**
     * Gets reservation_url
     *
     * @return string
     */
    public function getReservationUrl()
    {
        return $this->container['reservation_url'];
    }

    /**
     * Sets reservation_url
     *
     * @param string $reservation_url reservation_url
     *
     * @return $this
     */
    public function setReservationUrl($reservation_url)
    {
        $this->container['reservation_url'] = $reservation_url;

        return $this;
    }

    /**
     * Gets display_reservation_url
     *
     * @return string
     */
    public function getDisplayReservationUrl()
    {
        return $this->container['display_reservation_url'];
    }

    /**
     * Sets display_reservation_url
     *
     * @param string $display_reservation_url display_reservation_url
     *
     * @return $this
     */
    public function setDisplayReservationUrl($display_reservation_url)
    {
        $this->container['display_reservation_url'] = $display_reservation_url;

        return $this;
    }

    /**
     * Gets menu_url
     *
     * @return string
     */
    public function getMenuUrl()
    {
        return $this->container['menu_url'];
    }

    /**
     * Sets menu_url
     *
     * @param string $menu_url menu_url
     *
     * @return $this
     */
    public function setMenuUrl($menu_url)
    {
        $this->container['menu_url'] = $menu_url;

        return $this;
    }

    /**
     * Gets display_menu_url
     *
     * @return string
     */
    public function getDisplayMenuUrl()
    {
        return $this->container['display_menu_url'];
    }

    /**
     * Sets display_menu_url
     *
     * @param string $display_menu_url display_menu_url
     *
     * @return $this
     */
    public function setDisplayMenuUrl($display_menu_url)
    {
        $this->container['display_menu_url'] = $display_menu_url;

        return $this;
    }

    /**
     * Gets order_url
     *
     * @return string
     */
    public function getOrderUrl()
    {
        return $this->container['order_url'];
    }

    /**
     * Sets order_url
     *
     * @param string $order_url order_url
     *
     * @return $this
     */
    public function setOrderUrl($order_url)
    {
        $this->container['order_url'] = $order_url;

        return $this;
    }

    /**
     * Gets display_order_url
     *
     * @return string
     */
    public function getDisplayOrderUrl()
    {
        return $this->container['display_order_url'];
    }

    /**
     * Sets display_order_url
     *
     * @param string $display_order_url display_order_url
     *
     * @return $this
     */
    public function setDisplayOrderUrl($display_order_url)
    {
        $this->container['display_order_url'] = $display_order_url;

        return $this;
    }

    /**
     * Gets hours
     *
     * @return string
     */
    public function getHours()
    {
        return $this->container['hours'];
    }

    /**
     * Sets hours
     *
     * @param string $hours hours
     *
     * @return $this
     */
    public function setHours($hours)
    {
        $this->container['hours'] = $hours;

        return $this;
    }

    /**
     * Gets additional_hours_text
     *
     * @return string
     */
    public function getAdditionalHoursText()
    {
        return $this->container['additional_hours_text'];
    }

    /**
     * Sets additional_hours_text
     *
     * @param string $additional_hours_text additional_hours_text
     *
     * @return $this
     */
    public function setAdditionalHoursText($additional_hours_text)
    {
        $this->container['additional_hours_text'] = $additional_hours_text;

        return $this;
    }

    /**
     * Gets holiday_hours
     *
     * @return \Swagger\Client\Model\HolidayHour10[]
     */
    public function getHolidayHours()
    {
        return $this->container['holiday_hours'];
    }

    /**
     * Sets holiday_hours
     *
     * @param \Swagger\Client\Model\HolidayHour10[] $holiday_hours holiday_hours
     *
     * @return $this
     */
    public function setHolidayHours($holiday_hours)
    {
        $this->container['holiday_hours'] = $holiday_hours;

        return $this;
    }

    /**
     * Gets description
     *
     * @return string
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param string $description description
     *
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets conditions_treated
     *
     * @return string[]
     */
    public function getConditionsTreated()
    {
        return $this->container['conditions_treated'];
    }

    /**
     * Sets conditions_treated
     *
     * @param string[] $conditions_treated conditions_treated
     *
     * @return $this
     */
    public function setConditionsTreated($conditions_treated)
    {
        $this->container['conditions_treated'] = $conditions_treated;

        return $this;
    }

    /**
     * Gets certifications
     *
     * @return string[]
     */
    public function getCertifications()
    {
        return $this->container['certifications'];
    }

    /**
     * Sets certifications
     *
     * @param string[] $certifications certifications
     *
     * @return $this
     */
    public function setCertifications($certifications)
    {
        $this->container['certifications'] = $certifications;

        return $this;
    }

    /**
     * Gets education_list
     *
     * @return \Swagger\Client\Model\EducationList[]
     */
    public function getEducationList()
    {
        return $this->container['education_list'];
    }

    /**
     * Sets education_list
     *
     * @param \Swagger\Client\Model\EducationList[] $education_list education_list
     *
     * @return $this
     */
    public function setEducationList($education_list)
    {
        $this->container['education_list'] = $education_list;

        return $this;
    }

    /**
     * Gets degrees
     *
     * @return string[]
     */
    public function getDegrees()
    {
        return $this->container['degrees'];
    }

    /**
     * Sets degrees
     *
     * @param string[] $degrees degrees
     *
     * @return $this
     */
    public function setDegrees($degrees)
    {
        $this->container['degrees'] = $degrees;

        return $this;
    }

    /**
     * Gets admitting_hospitals
     *
     * @return string[]
     */
    public function getAdmittingHospitals()
    {
        return $this->container['admitting_hospitals'];
    }

    /**
     * Sets admitting_hospitals
     *
     * @param string[] $admitting_hospitals admitting_hospitals
     *
     * @return $this
     */
    public function setAdmittingHospitals($admitting_hospitals)
    {
        $this->container['admitting_hospitals'] = $admitting_hospitals;

        return $this;
    }

    /**
     * Gets accepting_new_patients
     *
     * @return bool
     */
    public function getAcceptingNewPatients()
    {
        return $this->container['accepting_new_patients'];
    }

    /**
     * Sets accepting_new_patients
     *
     * @param bool $accepting_new_patients accepting_new_patients
     *
     * @return $this
     */
    public function setAcceptingNewPatients($accepting_new_patients)
    {
        $this->container['accepting_new_patients'] = $accepting_new_patients;

        return $this;
    }

    /**
     * Gets closed
     *
     * @return \Swagger\Client\Model\Closed
     */
    public function getClosed()
    {
        return $this->container['closed'];
    }

    /**
     * Sets closed
     *
     * @param \Swagger\Client\Model\Closed $closed closed
     *
     * @return $this
     */
    public function setClosed($closed)
    {
        $this->container['closed'] = $closed;

        return $this;
    }

    /**
     * Gets payment_options
     *
     * @return string[]
     */
    public function getPaymentOptions()
    {
        return $this->container['payment_options'];
    }

    /**
     * Sets payment_options
     *
     * @param string[] $payment_options payment_options
     *
     * @return $this
     */
    public function setPaymentOptions($payment_options)
    {
        $this->container['payment_options'] = $payment_options;

        return $this;
    }

    /**
     * Gets insurance_accepted
     *
     * @return string[]
     */
    public function getInsuranceAccepted()
    {
        return $this->container['insurance_accepted'];
    }

    /**
     * Sets insurance_accepted
     *
     * @param string[] $insurance_accepted insurance_accepted
     *
     * @return $this
     */
    public function setInsuranceAccepted($insurance_accepted)
    {
        $this->container['insurance_accepted'] = $insurance_accepted;

        return $this;
    }

    /**
     * Gets logo
     *
     * @return \Swagger\Client\Model\Logo10
     */
    public function getLogo()
    {
        return $this->container['logo'];
    }

    /**
     * Sets logo
     *
     * @param \Swagger\Client\Model\Logo10 $logo logo
     *
     * @return $this
     */
    public function setLogo($logo)
    {
        $this->container['logo'] = $logo;

        return $this;
    }

    /**
     * Gets photos
     *
     * @return \Swagger\Client\Model\Photo[]
     */
    public function getPhotos()
    {
        return $this->container['photos'];
    }

    /**
     * Sets photos
     *
     * @param \Swagger\Client\Model\Photo[] $photos photos
     *
     * @return $this
     */
    public function setPhotos($photos)
    {
        $this->container['photos'] = $photos;

        return $this;
    }

    /**
     * Gets headshot
     *
     * @return \Swagger\Client\Model\Headshot2
     */
    public function getHeadshot()
    {
        return $this->container['headshot'];
    }

    /**
     * Sets headshot
     *
     * @param \Swagger\Client\Model\Headshot2 $headshot headshot
     *
     * @return $this
     */
    public function setHeadshot($headshot)
    {
        $this->container['headshot'] = $headshot;

        return $this;
    }

    /**
     * Gets video_urls
     *
     * @return string[]
     */
    public function getVideoUrls()
    {
        return $this->container['video_urls'];
    }

    /**
     * Sets video_urls
     *
     * @param string[] $video_urls video_urls
     *
     * @return $this
     */
    public function setVideoUrls($video_urls)
    {
        $this->container['video_urls'] = $video_urls;

        return $this;
    }

    /**
     * Gets instagram_handle
     *
     * @return string
     */
    public function getInstagramHandle()
    {
        return $this->container['instagram_handle'];
    }

    /**
     * Sets instagram_handle
     *
     * @param string $instagram_handle instagram_handle
     *
     * @return $this
     */
    public function setInstagramHandle($instagram_handle)
    {
        $this->container['instagram_handle'] = $instagram_handle;

        return $this;
    }

    /**
     * Gets twitter_handle
     *
     * @return string
     */
    public function getTwitterHandle()
    {
        return $this->container['twitter_handle'];
    }

    /**
     * Sets twitter_handle
     *
     * @param string $twitter_handle twitter_handle
     *
     * @return $this
     */
    public function setTwitterHandle($twitter_handle)
    {
        $this->container['twitter_handle'] = $twitter_handle;

        return $this;
    }

    /**
     * Gets google_website_override
     *
     * @return string
     */
    public function getGoogleWebsiteOverride()
    {
        return $this->container['google_website_override'];
    }

    /**
     * Sets google_website_override
     *
     * @param string $google_website_override google_website_override
     *
     * @return $this
     */
    public function setGoogleWebsiteOverride($google_website_override)
    {
        $this->container['google_website_override'] = $google_website_override;

        return $this;
    }

    /**
     * Gets google_cover_photo
     *
     * @return \Swagger\Client\Model\GoogleCoverPhoto8
     */
    public function getGoogleCoverPhoto()
    {
        return $this->container['google_cover_photo'];
    }

    /**
     * Sets google_cover_photo
     *
     * @param \Swagger\Client\Model\GoogleCoverPhoto8 $google_cover_photo google_cover_photo
     *
     * @return $this
     */
    public function setGoogleCoverPhoto($google_cover_photo)
    {
        $this->container['google_cover_photo'] = $google_cover_photo;

        return $this;
    }

    /**
     * Gets google_profile_photo
     *
     * @return \Swagger\Client\Model\GoogleProfilePhoto8
     */
    public function getGoogleProfilePhoto()
    {
        return $this->container['google_profile_photo'];
    }

    /**
     * Sets google_profile_photo
     *
     * @param \Swagger\Client\Model\GoogleProfilePhoto8 $google_profile_photo google_profile_photo
     *
     * @return $this
     */
    public function setGoogleProfilePhoto($google_profile_photo)
    {
        $this->container['google_profile_photo'] = $google_profile_photo;

        return $this;
    }

    /**
     * Gets google_preferred_photo
     *
     * @return string
     */
    public function getGooglePreferredPhoto()
    {
        return $this->container['google_preferred_photo'];
    }

    /**
     * Sets google_preferred_photo
     *
     * @param string $google_preferred_photo google_preferred_photo
     *
     * @return $this
     */
    public function setGooglePreferredPhoto($google_preferred_photo)
    {
        $this->container['google_preferred_photo'] = $google_preferred_photo;

        return $this;
    }

    /**
     * Gets google_attributes
     *
     * @return \Swagger\Client\Model\GoogleAttribute[]
     */
    public function getGoogleAttributes()
    {
        return $this->container['google_attributes'];
    }

    /**
     * Sets google_attributes
     *
     * @param \Swagger\Client\Model\GoogleAttribute[] $google_attributes google_attributes
     *
     * @return $this
     */
    public function setGoogleAttributes($google_attributes)
    {
        $this->container['google_attributes'] = $google_attributes;

        return $this;
    }

    /**
     * Gets facebook_page_url
     *
     * @return string
     */
    public function getFacebookPageUrl()
    {
        return $this->container['facebook_page_url'];
    }

    /**
     * Sets facebook_page_url
     *
     * @param string $facebook_page_url facebook_page_url
     *
     * @return $this
     */
    public function setFacebookPageUrl($facebook_page_url)
    {
        $this->container['facebook_page_url'] = $facebook_page_url;

        return $this;
    }

    /**
     * Gets facebook_cover_photo
     *
     * @return \Swagger\Client\Model\FacebookCoverPhoto8
     */
    public function getFacebookCoverPhoto()
    {
        return $this->container['facebook_cover_photo'];
    }

    /**
     * Sets facebook_cover_photo
     *
     * @param \Swagger\Client\Model\FacebookCoverPhoto8 $facebook_cover_photo facebook_cover_photo
     *
     * @return $this
     */
    public function setFacebookCoverPhoto($facebook_cover_photo)
    {
        $this->container['facebook_cover_photo'] = $facebook_cover_photo;

        return $this;
    }

    /**
     * Gets facebook_profile_picture
     *
     * @return \Swagger\Client\Model\FacebookProfilePicture
     */
    public function getFacebookProfilePicture()
    {
        return $this->container['facebook_profile_picture'];
    }

    /**
     * Sets facebook_profile_picture
     *
     * @param \Swagger\Client\Model\FacebookProfilePicture $facebook_profile_picture facebook_profile_picture
     *
     * @return $this
     */
    public function setFacebookProfilePicture($facebook_profile_picture)
    {
        $this->container['facebook_profile_picture'] = $facebook_profile_picture;

        return $this;
    }

    /**
     * Gets uber_link_type
     *
     * @return string
     */
    public function getUberLinkType()
    {
        return $this->container['uber_link_type'];
    }

    /**
     * Sets uber_link_type
     *
     * @param string $uber_link_type uber_link_type
     *
     * @return $this
     */
    public function setUberLinkType($uber_link_type)
    {
        $this->container['uber_link_type'] = $uber_link_type;

        return $this;
    }

    /**
     * Gets uber_link_text
     *
     * @return string
     */
    public function getUberLinkText()
    {
        return $this->container['uber_link_text'];
    }

    /**
     * Sets uber_link_text
     *
     * @param string $uber_link_text uber_link_text
     *
     * @return $this
     */
    public function setUberLinkText($uber_link_text)
    {
        $this->container['uber_link_text'] = $uber_link_text;

        return $this;
    }

    /**
     * Gets uber_trip_branding_text
     *
     * @return string
     */
    public function getUberTripBrandingText()
    {
        return $this->container['uber_trip_branding_text'];
    }

    /**
     * Sets uber_trip_branding_text
     *
     * @param string $uber_trip_branding_text uber_trip_branding_text
     *
     * @return $this
     */
    public function setUberTripBrandingText($uber_trip_branding_text)
    {
        $this->container['uber_trip_branding_text'] = $uber_trip_branding_text;

        return $this;
    }

    /**
     * Gets uber_trip_branding_url
     *
     * @return string
     */
    public function getUberTripBrandingUrl()
    {
        return $this->container['uber_trip_branding_url'];
    }

    /**
     * Sets uber_trip_branding_url
     *
     * @param string $uber_trip_branding_url uber_trip_branding_url
     *
     * @return $this
     */
    public function setUberTripBrandingUrl($uber_trip_branding_url)
    {
        $this->container['uber_trip_branding_url'] = $uber_trip_branding_url;

        return $this;
    }

    /**
     * Gets uber_trip_branding_description
     *
     * @return string
     */
    public function getUberTripBrandingDescription()
    {
        return $this->container['uber_trip_branding_description'];
    }

    /**
     * Sets uber_trip_branding_description
     *
     * @param string $uber_trip_branding_description uber_trip_branding_description
     *
     * @return $this
     */
    public function setUberTripBrandingDescription($uber_trip_branding_description)
    {
        $this->container['uber_trip_branding_description'] = $uber_trip_branding_description;

        return $this;
    }

    /**
     * Gets uber_client_id
     *
     * @return string
     */
    public function getUberClientId()
    {
        return $this->container['uber_client_id'];
    }

    /**
     * Sets uber_client_id
     *
     * @param string $uber_client_id uber_client_id
     *
     * @return $this
     */
    public function setUberClientId($uber_client_id)
    {
        $this->container['uber_client_id'] = $uber_client_id;

        return $this;
    }

    /**
     * Gets year_established
     *
     * @return string
     */
    public function getYearEstablished()
    {
        return $this->container['year_established'];
    }

    /**
     * Sets year_established
     *
     * @param string $year_established year_established
     *
     * @return $this
     */
    public function setYearEstablished($year_established)
    {
        $this->container['year_established'] = $year_established;

        return $this;
    }

    /**
     * Gets display_lat
     *
     * @return int
     */
    public function getDisplayLat()
    {
        return $this->container['display_lat'];
    }

    /**
     * Sets display_lat
     *
     * @param int $display_lat display_lat
     *
     * @return $this
     */
    public function setDisplayLat($display_lat)
    {
        $this->container['display_lat'] = $display_lat;

        return $this;
    }

    /**
     * Gets display_lng
     *
     * @return int
     */
    public function getDisplayLng()
    {
        return $this->container['display_lng'];
    }

    /**
     * Sets display_lng
     *
     * @param int $display_lng display_lng
     *
     * @return $this
     */
    public function setDisplayLng($display_lng)
    {
        $this->container['display_lng'] = $display_lng;

        return $this;
    }

    /**
     * Gets routable_lat
     *
     * @return int
     */
    public function getRoutableLat()
    {
        return $this->container['routable_lat'];
    }

    /**
     * Sets routable_lat
     *
     * @param int $routable_lat routable_lat
     *
     * @return $this
     */
    public function setRoutableLat($routable_lat)
    {
        $this->container['routable_lat'] = $routable_lat;

        return $this;
    }

    /**
     * Gets routable_lng
     *
     * @return int
     */
    public function getRoutableLng()
    {
        return $this->container['routable_lng'];
    }

    /**
     * Sets routable_lng
     *
     * @param int $routable_lng routable_lng
     *
     * @return $this
     */
    public function setRoutableLng($routable_lng)
    {
        $this->container['routable_lng'] = $routable_lng;

        return $this;
    }

    /**
     * Gets walkable_lat
     *
     * @return int
     */
    public function getWalkableLat()
    {
        return $this->container['walkable_lat'];
    }

    /**
     * Sets walkable_lat
     *
     * @param int $walkable_lat walkable_lat
     *
     * @return $this
     */
    public function setWalkableLat($walkable_lat)
    {
        $this->container['walkable_lat'] = $walkable_lat;

        return $this;
    }

    /**
     * Gets walkable_lng
     *
     * @return int
     */
    public function getWalkableLng()
    {
        return $this->container['walkable_lng'];
    }

    /**
     * Sets walkable_lng
     *
     * @param int $walkable_lng walkable_lng
     *
     * @return $this
     */
    public function setWalkableLng($walkable_lng)
    {
        $this->container['walkable_lng'] = $walkable_lng;

        return $this;
    }

    /**
     * Gets pickup_lat
     *
     * @return int
     */
    public function getPickupLat()
    {
        return $this->container['pickup_lat'];
    }

    /**
     * Sets pickup_lat
     *
     * @param int $pickup_lat pickup_lat
     *
     * @return $this
     */
    public function setPickupLat($pickup_lat)
    {
        $this->container['pickup_lat'] = $pickup_lat;

        return $this;
    }

    /**
     * Gets pickup_lng
     *
     * @return int
     */
    public function getPickupLng()
    {
        return $this->container['pickup_lng'];
    }

    /**
     * Sets pickup_lng
     *
     * @param int $pickup_lng pickup_lng
     *
     * @return $this
     */
    public function setPickupLng($pickup_lng)
    {
        $this->container['pickup_lng'] = $pickup_lng;

        return $this;
    }

    /**
     * Gets dropoff_lat
     *
     * @return int
     */
    public function getDropoffLat()
    {
        return $this->container['dropoff_lat'];
    }

    /**
     * Sets dropoff_lat
     *
     * @param int $dropoff_lat dropoff_lat
     *
     * @return $this
     */
    public function setDropoffLat($dropoff_lat)
    {
        $this->container['dropoff_lat'] = $dropoff_lat;

        return $this;
    }

    /**
     * Gets dropoff_lng
     *
     * @return int
     */
    public function getDropoffLng()
    {
        return $this->container['dropoff_lng'];
    }

    /**
     * Sets dropoff_lng
     *
     * @param int $dropoff_lng dropoff_lng
     *
     * @return $this
     */
    public function setDropoffLng($dropoff_lng)
    {
        $this->container['dropoff_lng'] = $dropoff_lng;

        return $this;
    }

    /**
     * Gets emails
     *
     * @return string[]
     */
    public function getEmails()
    {
        return $this->container['emails'];
    }

    /**
     * Sets emails
     *
     * @param string[] $emails emails
     *
     * @return $this
     */
    public function setEmails($emails)
    {
        $this->container['emails'] = $emails;

        return $this;
    }

    /**
     * Gets specialties
     *
     * @return string[]
     */
    public function getSpecialties()
    {
        return $this->container['specialties'];
    }

    /**
     * Sets specialties
     *
     * @param string[] $specialties specialties
     *
     * @return $this
     */
    public function setSpecialties($specialties)
    {
        $this->container['specialties'] = $specialties;

        return $this;
    }

    /**
     * Gets associations
     *
     * @return string[]
     */
    public function getAssociations()
    {
        return $this->container['associations'];
    }

    /**
     * Sets associations
     *
     * @param string[] $associations associations
     *
     * @return $this
     */
    public function setAssociations($associations)
    {
        $this->container['associations'] = $associations;

        return $this;
    }

    /**
     * Gets products
     *
     * @return string[]
     */
    public function getProducts()
    {
        return $this->container['products'];
    }

    /**
     * Sets products
     *
     * @param string[] $products products
     *
     * @return $this
     */
    public function setProducts($products)
    {
        $this->container['products'] = $products;

        return $this;
    }

    /**
     * Gets services
     *
     * @return string[]
     */
    public function getServices()
    {
        return $this->container['services'];
    }

    /**
     * Sets services
     *
     * @param string[] $services services
     *
     * @return $this
     */
    public function setServices($services)
    {
        $this->container['services'] = $services;

        return $this;
    }

    /**
     * Gets brands
     *
     * @return string[]
     */
    public function getBrands()
    {
        return $this->container['brands'];
    }

    /**
     * Sets brands
     *
     * @param string[] $brands brands
     *
     * @return $this
     */
    public function setBrands($brands)
    {
        $this->container['brands'] = $brands;

        return $this;
    }

    /**
     * Gets language
     *
     * @return string
     */
    public function getLanguage()
    {
        return $this->container['language'];
    }

    /**
     * Sets language
     *
     * @param string $language language
     *
     * @return $this
     */
    public function setLanguage($language)
    {
        $this->container['language'] = $language;

        return $this;
    }

    /**
     * Gets languages
     *
     * @return string[]
     */
    public function getLanguages()
    {
        return $this->container['languages'];
    }

    /**
     * Sets languages
     *
     * @param string[] $languages languages
     *
     * @return $this
     */
    public function setLanguages($languages)
    {
        $this->container['languages'] = $languages;

        return $this;
    }

    /**
     * Gets keywords
     *
     * @return string[]
     */
    public function getKeywords()
    {
        return $this->container['keywords'];
    }

    /**
     * Sets keywords
     *
     * @param string[] $keywords keywords
     *
     * @return $this
     */
    public function setKeywords($keywords)
    {
        $this->container['keywords'] = $keywords;

        return $this;
    }

    /**
     * Gets menus_label
     *
     * @return string
     */
    public function getMenusLabel()
    {
        return $this->container['menus_label'];
    }

    /**
     * Sets menus_label
     *
     * @param string $menus_label menus_label
     *
     * @return $this
     */
    public function setMenusLabel($menus_label)
    {
        $this->container['menus_label'] = $menus_label;

        return $this;
    }

    /**
     * Gets menu_ids
     *
     * @return string[]
     */
    public function getMenuIds()
    {
        return $this->container['menu_ids'];
    }

    /**
     * Sets menu_ids
     *
     * @param string[] $menu_ids menu_ids
     *
     * @return $this
     */
    public function setMenuIds($menu_ids)
    {
        $this->container['menu_ids'] = $menu_ids;

        return $this;
    }

    /**
     * Gets bio_lists_label
     *
     * @return string
     */
    public function getBioListsLabel()
    {
        return $this->container['bio_lists_label'];
    }

    /**
     * Sets bio_lists_label
     *
     * @param string $bio_lists_label bio_lists_label
     *
     * @return $this
     */
    public function setBioListsLabel($bio_lists_label)
    {
        $this->container['bio_lists_label'] = $bio_lists_label;

        return $this;
    }

    /**
     * Gets bio_list_ids
     *
     * @return string[]
     */
    public function getBioListIds()
    {
        return $this->container['bio_list_ids'];
    }

    /**
     * Sets bio_list_ids
     *
     * @param string[] $bio_list_ids bio_list_ids
     *
     * @return $this
     */
    public function setBioListIds($bio_list_ids)
    {
        $this->container['bio_list_ids'] = $bio_list_ids;

        return $this;
    }

    /**
     * Gets product_lists_label
     *
     * @return string
     */
    public function getProductListsLabel()
    {
        return $this->container['product_lists_label'];
    }

    /**
     * Sets product_lists_label
     *
     * @param string $product_lists_label product_lists_label
     *
     * @return $this
     */
    public function setProductListsLabel($product_lists_label)
    {
        $this->container['product_lists_label'] = $product_lists_label;

        return $this;
    }

    /**
     * Gets product_list_ids
     *
     * @return string[]
     */
    public function getProductListIds()
    {
        return $this->container['product_list_ids'];
    }

    /**
     * Sets product_list_ids
     *
     * @param string[] $product_list_ids product_list_ids
     *
     * @return $this
     */
    public function setProductListIds($product_list_ids)
    {
        $this->container['product_list_ids'] = $product_list_ids;

        return $this;
    }

    /**
     * Gets event_lists_label
     *
     * @return string
     */
    public function getEventListsLabel()
    {
        return $this->container['event_lists_label'];
    }

    /**
     * Sets event_lists_label
     *
     * @param string $event_lists_label event_lists_label
     *
     * @return $this
     */
    public function setEventListsLabel($event_lists_label)
    {
        $this->container['event_lists_label'] = $event_lists_label;

        return $this;
    }

    /**
     * Gets event_list_ids
     *
     * @return string[]
     */
    public function getEventListIds()
    {
        return $this->container['event_list_ids'];
    }

    /**
     * Sets event_list_ids
     *
     * @param string[] $event_list_ids event_list_ids
     *
     * @return $this
     */
    public function setEventListIds($event_list_ids)
    {
        $this->container['event_list_ids'] = $event_list_ids;

        return $this;
    }

    /**
     * Gets folder_id
     *
     * @return string
     */
    public function getFolderId()
    {
        return $this->container['folder_id'];
    }

    /**
     * Sets folder_id
     *
     * @param string $folder_id folder_id
     *
     * @return $this
     */
    public function setFolderId($folder_id)
    {
        $this->container['folder_id'] = $folder_id;

        return $this;
    }

    /**
     * Gets label_ids
     *
     * @return string[]
     */
    public function getLabelIds()
    {
        return $this->container['label_ids'];
    }

    /**
     * Sets label_ids
     *
     * @param string[] $label_ids label_ids
     *
     * @return $this
     */
    public function setLabelIds($label_ids)
    {
        $this->container['label_ids'] = $label_ids;

        return $this;
    }

    /**
     * Gets custom_fields
     *
     * @return \Swagger\Client\Model\CustomFields
     */
    public function getCustomFields()
    {
        return $this->container['custom_fields'];
    }

    /**
     * Sets custom_fields
     *
     * @param \Swagger\Client\Model\CustomFields $custom_fields custom_fields
     *
     * @return $this
     */
    public function setCustomFields($custom_fields)
    {
        $this->container['custom_fields'] = $custom_fields;

        return $this;
    }

    /**
     * Gets intelligent_search_tracking_enabled
     *
     * @return bool
     */
    public function getIntelligentSearchTrackingEnabled()
    {
        return $this->container['intelligent_search_tracking_enabled'];
    }

    /**
     * Sets intelligent_search_tracking_enabled
     *
     * @param bool $intelligent_search_tracking_enabled intelligent_search_tracking_enabled
     *
     * @return $this
     */
    public function setIntelligentSearchTrackingEnabled($intelligent_search_tracking_enabled)
    {
        $this->container['intelligent_search_tracking_enabled'] = $intelligent_search_tracking_enabled;

        return $this;
    }

    /**
     * Gets intelligent_search_tracking_frequency
     *
     * @return string
     */
    public function getIntelligentSearchTrackingFrequency()
    {
        return $this->container['intelligent_search_tracking_frequency'];
    }

    /**
     * Sets intelligent_search_tracking_frequency
     *
     * @param string $intelligent_search_tracking_frequency intelligent_search_tracking_frequency
     *
     * @return $this
     */
    public function setIntelligentSearchTrackingFrequency($intelligent_search_tracking_frequency)
    {
        $this->container['intelligent_search_tracking_frequency'] = $intelligent_search_tracking_frequency;

        return $this;
    }

    /**
     * Gets location_keywords
     *
     * @return string[]
     */
    public function getLocationKeywords()
    {
        return $this->container['location_keywords'];
    }

    /**
     * Sets location_keywords
     *
     * @param string[] $location_keywords location_keywords
     *
     * @return $this
     */
    public function setLocationKeywords($location_keywords)
    {
        $this->container['location_keywords'] = $location_keywords;

        return $this;
    }

    /**
     * Gets custom_keywords
     *
     * @return string[]
     */
    public function getCustomKeywords()
    {
        return $this->container['custom_keywords'];
    }

    /**
     * Sets custom_keywords
     *
     * @param string[] $custom_keywords custom_keywords
     *
     * @return $this
     */
    public function setCustomKeywords($custom_keywords)
    {
        $this->container['custom_keywords'] = $custom_keywords;

        return $this;
    }

    /**
     * Gets query_templates
     *
     * @return string[]
     */
    public function getQueryTemplates()
    {
        return $this->container['query_templates'];
    }

    /**
     * Sets query_templates
     *
     * @param string[] $query_templates query_templates
     *
     * @return $this
     */
    public function setQueryTemplates($query_templates)
    {
        $this->container['query_templates'] = $query_templates;

        return $this;
    }

    /**
     * Gets alternate_names
     *
     * @return string[]
     */
    public function getAlternateNames()
    {
        return $this->container['alternate_names'];
    }

    /**
     * Sets alternate_names
     *
     * @param string[] $alternate_names alternate_names
     *
     * @return $this
     */
    public function setAlternateNames($alternate_names)
    {
        $this->container['alternate_names'] = $alternate_names;

        return $this;
    }

    /**
     * Gets alternate_websites
     *
     * @return string[]
     */
    public function getAlternateWebsites()
    {
        return $this->container['alternate_websites'];
    }

    /**
     * Sets alternate_websites
     *
     * @param string[] $alternate_websites alternate_websites
     *
     * @return $this
     */
    public function setAlternateWebsites($alternate_websites)
    {
        $this->container['alternate_websites'] = $alternate_websites;

        return $this;
    }

    /**
     * Gets competitors
     *
     * @return \Swagger\Client\Model\Competitor[]
     */
    public function getCompetitors()
    {
        return $this->container['competitors'];
    }

    /**
     * Sets competitors
     *
     * @param \Swagger\Client\Model\Competitor[] $competitors competitors
     *
     * @return $this
     */
    public function setCompetitors($competitors)
    {
        $this->container['competitors'] = $competitors;

        return $this;
    }

    /**
     * Gets tracking_sites
     *
     * @return string[]
     */
    public function getTrackingSites()
    {
        return $this->container['tracking_sites'];
    }

    /**
     * Sets tracking_sites
     *
     * @param string[] $tracking_sites tracking_sites
     *
     * @return $this
     */
    public function setTrackingSites($tracking_sites)
    {
        $this->container['tracking_sites'] = $tracking_sites;

        return $this;
    }

    /**
     * Gets is_cluster_primary
     *
     * @return bool
     */
    public function getIsClusterPrimary()
    {
        return $this->container['is_cluster_primary'];
    }

    /**
     * Sets is_cluster_primary
     *
     * @param bool $is_cluster_primary is_cluster_primary
     *
     * @return $this
     */
    public function setIsClusterPrimary($is_cluster_primary)
    {
        $this->container['is_cluster_primary'] = $is_cluster_primary;

        return $this;
    }

    /**
     * Gets attire
     *
     * @return string
     */
    public function getAttire()
    {
        return $this->container['attire'];
    }

    /**
     * Sets attire
     *
     * @param string $attire attire
     *
     * @return $this
     */
    public function setAttire($attire)
    {
        $this->container['attire'] = $attire;

        return $this;
    }

    /**
     * Gets price_range
     *
     * @return string
     */
    public function getPriceRange()
    {
        return $this->container['price_range'];
    }

    /**
     * Sets price_range
     *
     * @param string $price_range price_range
     *
     * @return $this
     */
    public function setPriceRange($price_range)
    {
        $this->container['price_range'] = $price_range;

        return $this;
    }

    /**
     * Gets meals_served
     *
     * @return string[]
     */
    public function getMealsServed()
    {
        return $this->container['meals_served'];
    }

    /**
     * Sets meals_served
     *
     * @param string[] $meals_served meals_served
     *
     * @return $this
     */
    public function setMealsServed($meals_served)
    {
        $this->container['meals_served'] = $meals_served;

        return $this;
    }

    /**
     * Gets located_in
     *
     * @return string
     */
    public function getLocatedIn()
    {
        return $this->container['located_in'];
    }

    /**
     * Sets located_in
     *
     * @param string $located_in located_in
     *
     * @return $this
     */
    public function setLocatedIn($located_in)
    {
        $this->container['located_in'] = $located_in;

        return $this;
    }

    /**
     * Gets primary_contact
     *
     * @return string
     */
    public function getPrimaryContact()
    {
        return $this->container['primary_contact'];
    }

    /**
     * Sets primary_contact
     *
     * @param string $primary_contact primary_contact
     *
     * @return $this
     */
    public function setPrimaryContact($primary_contact)
    {
        $this->container['primary_contact'] = $primary_contact;

        return $this;
    }

    /**
     * Gets review_response_conversation_enabled
     *
     * @return bool
     */
    public function getReviewResponseConversationEnabled()
    {
        return $this->container['review_response_conversation_enabled'];
    }

    /**
     * Sets review_response_conversation_enabled
     *
     * @param bool $review_response_conversation_enabled review_response_conversation_enabled
     *
     * @return $this
     */
    public function setReviewResponseConversationEnabled($review_response_conversation_enabled)
    {
        $this->container['review_response_conversation_enabled'] = $review_response_conversation_enabled;

        return $this;
    }

    /**
     * Gets holiday_hours_confirmation_enabled
     *
     * @return bool
     */
    public function getHolidayHoursConfirmationEnabled()
    {
        return $this->container['holiday_hours_confirmation_enabled'];
    }

    /**
     * Sets holiday_hours_confirmation_enabled
     *
     * @param bool $holiday_hours_confirmation_enabled holiday_hours_confirmation_enabled
     *
     * @return $this
     */
    public function setHolidayHoursConfirmationEnabled($holiday_hours_confirmation_enabled)
    {
        $this->container['holiday_hours_confirmation_enabled'] = $holiday_hours_confirmation_enabled;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


